{"version":3,"sources":["pages/frameworkuser/store/index.ts","pages/frameworkuser/views/models.tsx","pages/frameworkuser/views/forms.tsx","pages/frameworkuser/views/action.tsx","pages/frameworkuser/views/other.tsx","pages/frameworkuser/views/search.tsx","pages/frameworkuser/views/table.tsx","pages/frameworkuser/index.tsx"],"names":["BindAll","Apis","search","url","method","details","insert","update","delete","import","export","exportIds","template","DataSource","mergeLocales","props","label","id","rules","values","txt","getLocalesValue","formItem","placeholder","getLocalesTemplate","dataSource","Text","Value","checkedChildren","type","unCheckedChildren","listStyle","undefined","Request","cache","models","value","key","fieId","InsertForm","DialogFormDes","onFormSubmit","Store","onInsert","observer","Models","this","span","layout","React","UpdateForm","onUpdate","onLoadData","onDetails","form","getFieldDecorator","hidden","display","InfoForm","ActionEvents","onImport","PageState","visiblePort","onExport","onExportIds","onDelete","data","onDeleteList","length","selectedRowKeys","confirm","title","text","onOk","a","onCancel","pageAction","DesError","deletelength","disabled","className","visible","onAuthorizeActions","icon","loadData","onClick","overlay","Item","rowAction","showSubmit","onConfirm","DesForm","defaultValues","toJS","searchParams","columnDefs","headerName","field","cellRenderer","minWidth","Action","rowHeight","Component","App","AuthorizeDecorator","PageStore"],"mappings":"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","file":"static/js/15.fc18846d.chunk.js","sourcesContent":["import { BindAll } from 'lodash-decorators';\r\nimport DataSource from 'store/dataSource';\r\nimport { observable, action } from 'mobx';\r\n@BindAll()\r\nexport class Store extends DataSource {\r\n    constructor() {\r\n        super({\r\n            // IdKey: \"ID\", 默认 ID\r\n            // Target: \"/api\", 默认 /api\r\n            Apis: {\r\n                search: {\r\n                    url: \"/_frameworkuserbase/search\",\r\n                    method: \"post\"\r\n                },\r\n                details: {\r\n                    // 支持 嵌套 参数 /user/{ID}/{AAA}/{BBB}\r\n                    url: \"/_frameworkuserbase/{ID}\",\r\n                    method: \"get\"\r\n                },\r\n                insert: {\r\n                    url: \"/_frameworkuserbase/add\",\r\n                    method: \"post\"\r\n                },\r\n                update: {\r\n                    url: \"/_frameworkuserbase/edit\",\r\n                    method: \"put\"\r\n                },\r\n                delete: {\r\n                    url: \"/_frameworkuserbase/BatchDelete\",\r\n                    method: \"post\"\r\n                },\r\n                import: {\r\n                    url: \"/_frameworkuserbase/import\",\r\n                    method: \"post\"\r\n                },\r\n                export: {\r\n                    url: \"/_frameworkuserbase/ExportExcel\",\r\n                    method: \"post\"\r\n                },\r\n                exportIds: {\r\n                    url: \"/_frameworkuserbase/ExportExcelByIds\",\r\n                    method: \"post\"\r\n                },\r\n                template: {\r\n                    url: \"/_frameworkuserbase/GetExcelTemplate\",\r\n                    method: \"get\"\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default new Store();","import { Input, Switch, Icon, Select, Upload, message, Modal, InputNumber } from 'antd';\r\nimport { WtmCascader, WtmCheckbox, WtmDatePicker, WtmEditor, WtmRadio, WtmSelect, WtmTransfer, WtmUploadImg, WtmUpload } from 'components/form';\r\nimport { FormItem } from 'components/dataView';\r\nimport { DesValueFormatter } from 'components/decorators';\r\nimport * as React from 'react';\r\nimport lodash from 'lodash';\r\nimport Regular from 'utils/Regular';\r\nimport Request from 'utils/Request';\r\nimport { mergeLocales, getLocalesValue, getLocalesTemplate } from 'locale';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'frameworkuser.ITCode': '账号',\r\n        'frameworkuser.Password': '密码',\r\n        'frameworkuser.Email': '邮箱',\r\n        'frameworkuser.Name': '姓名',\r\n        'frameworkuser.Sex': '性别',\r\n        'frameworkuser.Sex.0': '男',\r\n        'frameworkuser.Sex.1': '女',\r\n        'frameworkuser.CellPhone': '手机',\r\n        'frameworkuser.HomePhone': '座机',\r\n        'frameworkuser.Address': '住址',\r\n        'frameworkuser.ZipCode': '邮编',\r\n        'frameworkuser.PhotoId': '照片',\r\n        'frameworkuser.IsValid': '是否有效',\r\n        'frameworkuser.UserRoles': '角色',\r\n        'frameworkuser.UserGroups': '用户组',\r\n    },\r\n    \"en-US\": {\r\n        'frameworkuser.ITCode': 'Account',\r\n        'frameworkuser.Password': 'Password',\r\n        'frameworkuser.Email': 'Email',\r\n        'frameworkuser.Name': 'Name',\r\n        'frameworkuser.Sex': 'Gender',\r\n        'frameworkuser.Sex.0': 'Male',\r\n        'frameworkuser.Sex.1': 'Female',\r\n        'frameworkuser.CellPhone': 'CellPhone',\r\n        'frameworkuser.HomePhone': 'HomePhone',\r\n        'frameworkuser.Address': 'Address',\r\n        'frameworkuser.ZipCode': 'ZipCode',\r\n        'frameworkuser.PhotoId': 'Photo',\r\n        'frameworkuser.IsValid': 'IsValid',\r\n        'frameworkuser.UserRoles': 'Roles',\r\n        'frameworkuser.UserGroups': 'Groups',\r\n    }\r\n});\r\n\r\n/**\r\n * label  标识\r\n * rules   校验规则，参考下方文档  https://ant.design/components/form-cn/#components-form-demo-validate-other\r\n * formItem  表单组件\r\n */\r\nexport default {\r\n    /**\r\n     * 表单模型 \r\n     * @param props \r\n     */\r\n    editModels(props?): WTM.FormItem {\r\n        return {\r\n            /** 账号 */\r\n            \"Entity.ITCode\": {\r\n                label: <FormattedMessage id='frameworkuser.ITCode' />,\r\n                rules: [{\r\n                    \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('frameworkuser.ITCode') }} />\r\n                }],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkuser.ITCode') })} />\r\n            },\r\n            /** 密码 */\r\n            \"Entity.Password\": {\r\n                label: <FormattedMessage id='frameworkuser.Password' />,\r\n                rules: [{\r\n                    \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('frameworkuser.Password') }} />\r\n                }],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkuser.Password') })} />\r\n            },\r\n            /** 邮箱 */\r\n            \"Entity.Email\": {\r\n                label: <FormattedMessage id='frameworkuser.Email' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkuser.Email') })} />\r\n            },\r\n            /** 姓名 */\r\n            \"Entity.Name\": {\r\n                label: <FormattedMessage id='frameworkuser.Name' />,\r\n                rules: [{\r\n                    \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('frameworkuser.Name') }} />\r\n                }],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkuser.Name') })} />\r\n            },\r\n            /** 性别 */\r\n            \"Entity.Gender\": {\r\n                label: <FormattedMessage id='frameworkuser.Sex' />,\r\n                rules: [],\r\n                formItem: <WtmSelect placeholder={getLocalesTemplate('tips.placeholder.choose', { txt: getLocalesValue('frameworkuser.Sex') })} dataSource={[\r\n                    { Text: <FormattedMessage id='frameworkuser.Sex.0' />, Value: 'Male' },\r\n                    { Text: <FormattedMessage id='frameworkuser.Sex.1' />, Value: 'Female' }\r\n                ]} />\r\n            },\r\n            /** 手机 */\r\n            \"Entity.CellPhone\": {\r\n                label: <FormattedMessage id='frameworkuser.CellPhone' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkuser.CellPhone') })} />\r\n            },\r\n            /** 座机 */\r\n            \"Entity.HomePhone\": {\r\n                label: <FormattedMessage id='frameworkuser.HomePhone' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkuser.HomePhone') })} />\r\n            },\r\n            /** 住址 */\r\n            \"Entity.Address\": {\r\n                label: <FormattedMessage id='frameworkuser.Address' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkuser.Address') })} />\r\n            },\r\n            /** 邮编 */\r\n            \"Entity.ZipCode\": {\r\n                label: <FormattedMessage id='frameworkuser.ZipCode' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkuser.ZipCode') })} />\r\n            },\r\n            /** 照片 */\r\n            \"Entity.PhotoId\": {\r\n                label: <FormattedMessage id='frameworkuser.PhotoId' />,\r\n                rules: [],\r\n                formItem: <WtmUploadImg />\r\n            },\r\n            /** 是否有效 */\r\n            \"Entity.IsValid\": {\r\n                label: <FormattedMessage id='frameworkuser.IsValid' />,\r\n                rules: [],\r\n                formItem: <Switch checkedChildren={<Icon type=\"check\" />} unCheckedChildren={<Icon type=\"close\" />} />\r\n            },\r\n            /** 角色 */\r\n            \"SelectedRolesCodes\": {\r\n                label: <FormattedMessage id='frameworkuser.UserRoles' />,\r\n                rules: [],\r\n                formItem: <WtmTransfer\r\n                    listStyle={undefined}\r\n                    dataSource={Request.cache({ url: \"/api/_FrameworkUserBase/GetFrameworkRoles\" })}\r\n                />\r\n            },\r\n            /** 用户组 */\r\n            \"SelectedGroupCodes\": {\r\n                label: <FormattedMessage id='frameworkuser.UserGroups' />,\r\n                rules: [],\r\n                formItem: <WtmTransfer\r\n                    listStyle={undefined}\r\n                    dataSource={Request.cache({ url: \"/api/_FrameworkUserBase/GetFrameworkGroups\" })}\r\n                />\r\n            }\r\n\r\n        }\r\n    },\r\n    /**\r\n     * 搜索 模型 \r\n     * @param props \r\n     */\r\n    searchModels(props?): WTM.FormItem {\r\n        return {\r\n            /** 账号 */\r\n            \"ITCode\": {\r\n                label: <FormattedMessage id='frameworkuser.ITCode' />,\r\n                rules: [],\r\n                formItem: <Input placeholder=\"\" />\r\n            },\r\n            /** 姓名 */\r\n            \"Name\": {\r\n                label: <FormattedMessage id='frameworkuser.Name' />,\r\n                rules: [],\r\n                formItem: <Input placeholder=\"\" />\r\n            },\r\n\r\n        }\r\n    },\r\n    /**\r\n     * 渲染 模型\r\n     */\r\n    renderModels(props?) {\r\n        return lodash.map(props.models, (value, key) => {\r\n            return <FormItem {...props} fieId={key} key={key} />\r\n        })\r\n    }\r\n}\r\n","import { Col, Form } from 'antd';\r\nimport { DialogForm, DialogFormDes, DialogFormSubmit, FormItem, InfoShellLayout, DialogLoadData, } from 'components/dataView';\r\nimport { DesError } from 'components/decorators'; //错误\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store'; //页面状态\r\nimport Models from './models'; //模型\r\n/**\r\n * 转换表单中的 UserRoles和UserGroups为对象数组\r\n * @param values \r\n */\r\n// function toUpdateUserRGs(values) {\r\n//     values = lodash.update(values, 'Entity.UserRoles', data => {\r\n//         return data && data.map(role => {\r\n//             if (lodash.isString(role)) {\r\n//                 role = {\r\n//                     RoleId: role\r\n//                 }\r\n//             }\r\n//             return role\r\n//         });\r\n//     })\r\n//     values = lodash.update(values, 'Entity.UserGroups', data => {\r\n//         return data && data.map(group => {\r\n//             if (lodash.isString(group)) {\r\n//                 group = {\r\n//                     GroupId: group\r\n//                 }\r\n//             }\r\n//             return group\r\n//         })\r\n//     })\r\n//     return values\r\n// }\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        // values = toUpdateUserRGs(values)\r\n        return Store.onInsert(values)\r\n    }\r\n})\r\n@observer\r\nexport class InsertForm extends React.Component<any, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n        }\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"Entity.ITCode\" />\r\n            <FormItem {...props} fieId=\"Entity.Password\" />\r\n            <FormItem {...props} fieId=\"Entity.Email\" />\r\n            <FormItem {...props} fieId=\"Entity.Name\" />\r\n            <FormItem {...props} fieId=\"Entity.Gender\" />\r\n            <FormItem {...props} fieId=\"Entity.CellPhone\" />\r\n            <FormItem {...props} fieId=\"Entity.HomePhone\" />\r\n            <FormItem {...props} fieId=\"Entity.Address\" />\r\n            <FormItem {...props} fieId=\"Entity.ZipCode\" />\r\n            <FormItem {...props} fieId=\"Entity.PhotoId\" />\r\n            <Col span={24}>\r\n                <FormItem {...props} fieId=\"SelectedRolesCodes\" layout=\"row\" />\r\n            </Col>\r\n            <Col span={24}>\r\n                <FormItem {...props} fieId=\"SelectedGroupCodes\" layout=\"row\" />\r\n            </Col>\r\n\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 修改表单\r\n */\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        // values = toUpdateUserRGs(values)\r\n        return Store.onUpdate(values)\r\n    },\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class UpdateForm extends React.Component<WTM.FormProps, any> {\r\n    // 创建模型\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const { form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n        }\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"Entity.ID\" hidden />\r\n            <FormItem {...props} fieId=\"Entity.ITCode\" display/>\r\n            <FormItem {...props} fieId=\"Entity.Email\" />\r\n            <FormItem {...props} fieId=\"Entity.Name\" />\r\n            <FormItem {...props} fieId=\"Entity.Gender\" />\r\n            <FormItem {...props} fieId=\"Entity.CellPhone\" />\r\n            <FormItem {...props} fieId=\"Entity.HomePhone\" />\r\n            <FormItem {...props} fieId=\"Entity.Address\" />\r\n            <FormItem {...props} fieId=\"Entity.ZipCode\" />\r\n            <FormItem {...props} fieId=\"Entity.PhotoId\" />\r\n            <FormItem {...props} fieId=\"Entity.IsValid\" />\r\n            <Col span={24}>\r\n                <FormItem {...props} fieId=\"SelectedRolesCodes\" layout=\"row\" \r\n                // value={lodash.map(lodash.get(props.defaultValues, 'Entity.UserRoles'), \"RoleId\")}\r\n                />\r\n            </Col>\r\n            <Col span={24}>\r\n                <FormItem {...props} fieId=\"SelectedGroupCodes\" layout=\"row\" \r\n                // value={lodash.map(lodash.get(props.defaultValues, 'Entity.UserGroups'), \"GroupId\")}\r\n                />\r\n            </Col>\r\n\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 详情\r\n */\r\n@DialogFormDes({\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class InfoForm extends React.Component<WTM.FormProps, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            display: true,\r\n        }\r\n        return <InfoShellLayout >\r\n            <FormItem {...props} fieId=\"Entity.ITCode\" />\r\n            <FormItem {...props} fieId=\"Entity.Email\" />\r\n            <FormItem {...props} fieId=\"Entity.Name\" />\r\n            <FormItem {...props} fieId=\"Entity.Gender\" />\r\n            <FormItem {...props} fieId=\"Entity.CellPhone\" />\r\n            <FormItem {...props} fieId=\"Entity.HomePhone\" />\r\n            <FormItem {...props} fieId=\"Entity.Address\" />\r\n            <FormItem {...props} fieId=\"Entity.ZipCode\" />\r\n            <FormItem {...props} fieId=\"Entity.PhotoId\" />\r\n            <FormItem {...props} fieId=\"Entity.IsValid\" />\r\n            <Col span={24}>\r\n                <FormItem {...props} fieId=\"SelectedRolesCodes\" layout=\"row\" \r\n                // value={lodash.map(lodash.get(props.defaultValues, 'Entity.UserRoles'), \"RoleId\")}\r\n                />\r\n            </Col>\r\n            <Col span={24}>\r\n                <FormItem {...props} fieId=\"SelectedGroupCodes\" layout=\"row\" \r\n                // value={lodash.map(lodash.get(props.defaultValues, 'Entity.UserGroups'), \"GroupId\")}\r\n                />\r\n            </Col>\r\n\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n","import { Button, Divider, Dropdown, Menu, Modal, Popconfirm, Row } from 'antd';\r\nimport { DialogForm, Visible } from 'components/dataView';\r\nimport { DesError } from 'components/decorators';\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { onAuthorizeActions } from 'store/system/authorize';\r\nimport Store from '../store';\r\nimport { InfoForm, InsertForm, UpdateForm } from './forms';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { getLocalesTemplate } from 'locale';\r\n/**\r\n * 动作事件\r\n */\r\nexport const ActionEvents = {\r\n    /**\r\n     * 导入\r\n     */\r\n    onImport() {\r\n        Store.PageState.visiblePort = true;\r\n    },\r\n    /**\r\n     * 导出\r\n     */\r\n    onExport() {\r\n        Store.onExport()\r\n    },\r\n    /**\r\n     * 批量导出\r\n     */\r\n    onExportIds() {\r\n        Store.onExportIds()\r\n    },\r\n    /**\r\n     * 删除\r\n     * @param data \r\n     */\r\n    onDelete(data) {\r\n        Store.onDelete(data)\r\n    },\r\n    /**\r\n    * 删除\r\n    */\r\n    onDeleteList() {\r\n        const length = Store.DataSource.selectedRowKeys.length\r\n        Modal.confirm({\r\n            title: getLocalesTemplate('action.deleteConfirm', { text: length }),\r\n            onOk: async () => {\r\n                Store.onDelete(Store.DataSource.selectedRowKeys)\r\n            },\r\n            onCancel() { },\r\n        });\r\n    },\r\n}\r\n/**\r\n * 表格 所有 动作\r\n */\r\n@DesError\r\n@observer\r\nclass PageAction extends React.Component<any, any> {\r\n    render() {\r\n        const { selectedRowKeys } = Store.DataSource;\r\n        const deletelength = selectedRowKeys.length;\r\n        const disabled = deletelength < 1;\r\n        return (\r\n            <Row className=\"data-view-page-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"insert\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.insert\" />}\r\n                        icon=\"plus\"\r\n                    >\r\n                        <InsertForm />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"update\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.update\" />}\r\n                        icon=\"edit\"\r\n                        disabled={deletelength != 1}\r\n                    >\r\n                        <UpdateForm loadData={() => (lodash.find(selectedRowKeys))} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button icon=\"delete\" onClick={ActionEvents.onDeleteList} disabled={disabled}><FormattedMessage id=\"action.delete\" /></Button>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"import\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button icon=\"folder-add\" onClick={ActionEvents.onImport}><FormattedMessage id=\"action.import\" /></Button>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"export\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Dropdown overlay={<Menu>\r\n                        <Menu.Item>\r\n                            <a onClick={ActionEvents.onExport}><FormattedMessage id=\"action.exportAll\" /></a>\r\n                        </Menu.Item>\r\n                        <Menu.Item disabled={disabled}>\r\n                            <a onClick={ActionEvents.onExportIds}><FormattedMessage id=\"action.exportSelect\" /></a>\r\n                        </Menu.Item>\r\n                    </Menu>}>\r\n                        <Button icon=\"download\" ><FormattedMessage id=\"action.export\" /></Button>\r\n                    </Dropdown>\r\n                </Visible>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n/**\r\n * 表格 行 动作\r\n */\r\n@DesError\r\n@observer\r\nclass RowAction extends React.Component<{\r\n    /** 数据详情 */\r\n    data: any;\r\n    [key: string]: any;\r\n}, any> {\r\n    render() {\r\n        const { data } = this.props\r\n        return (\r\n            <Row className=\"data-view-row-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"details\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.info\" />}\r\n                        showSubmit={false}\r\n                        type=\"a\"\r\n                    >\r\n                        <InfoForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"update\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.update\" />}\r\n                        type=\"a\"\r\n                    >\r\n                        <UpdateForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Popconfirm title={<FormattedMessage id=\"action.deleteConfirm\" values={{ text: '' }} />} onConfirm={() => { ActionEvents.onDelete(data) }} >\r\n                        <a ><FormattedMessage id=\"action.delete\" /></a>\r\n                    </Popconfirm>\r\n                </Visible>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default {\r\n    /**\r\n     * 页面动作\r\n     */\r\n    pageAction: PageAction,\r\n    /**\r\n     * 数据行动作\r\n     */\r\n    rowAction: RowAction\r\n}","import { ImportModal } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\n\r\n/**\r\n * 其他弹框类组件\r\n */\r\nexport default class extends React.Component<any, any>{\r\n    shouldComponentUpdate() {\r\n        return false\r\n    }\r\n    render() {\r\n        return <React.Fragment key=\"page-other\">\r\n            <ImportModal Store={Store} />\r\n        </React.Fragment>\r\n    }\r\n}","import { FormItem } from 'components/dataView';\r\nimport { DataViewSearch } from 'components/dataView/header/search';\r\nimport { DesForm } from 'components/decorators';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\nimport Models from './models'; \r\n\r\n@DesForm\r\n@observer\r\nexport default class extends React.Component<any, any> {\r\n    // 创建模型\r\n    models = Models.searchModels(this.props);\r\n    render() {\r\n        // item 的 props\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            defaultValues: toJS(Store.DataSource.searchParams)\r\n        }\r\n        return <DataViewSearch\r\n            // columnCount={4} 默认全局\r\n            // onReset={() => { }} 覆盖默认方法\r\n            // onSubmit={() => { }} 覆盖默认方法\r\n            Store={Store}\r\n            form={this.props.form}\r\n        >\r\n            {Models.renderModels(props)}\r\n        </DataViewSearch>\r\n    }\r\n}","\r\nimport { ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { AgGrid } from 'components/dataView';\r\nimport { mergeLocales } from 'locale';\r\nimport React from 'react';\r\nimport Store from '../store';\r\nimport Action from './action';\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'frameworkuser.ITCode': '账号',\r\n        'frameworkuser.Name': '姓名',\r\n        'frameworkuser.Sex': '性别',\r\n        'frameworkuser.PhotoId': '照片',\r\n        'frameworkuser.IsValid': '是否有效',\r\n        'frameworkuser.RoleName_view': '角色',\r\n        'frameworkuser.GroupName_view': '用户组',\r\n    },\r\n    \"en-US\": {\r\n        'frameworkuser.ITCode': 'Account',\r\n        'frameworkuser.Name': 'Name',\r\n        'frameworkuser.Sex': 'Gender',\r\n        'frameworkuser.PhotoId': 'Photo',\r\n        'frameworkuser.IsValid': 'IsValid',\r\n        'frameworkuser.RoleName_view': 'RoleName',\r\n        'frameworkuser.GroupName_view': 'GroupName',\r\n    }\r\n});\r\n// 列配置\r\nconst columnDefs: (ColDef | ColGroupDef)[] = [\r\n    {\r\n        headerName: \"frameworkuser.ITCode\", field: \"ITCode\",\r\n    },\r\n    {\r\n        headerName: \"frameworkuser.Name\", field: \"Name\",\r\n    },\r\n    {\r\n        headerName: \"frameworkuser.Sex\", field: \"Sex\",\r\n    },\r\n    {\r\n        headerName: \"frameworkuser.PhotoId\", field: \"PhotoId\", cellRenderer: \"columnsRenderImg\", minWidth: 130\r\n    },\r\n    {\r\n        headerName: \"frameworkuser.IsValid\", field: \"IsValid\", cellRenderer: \"columnsRenderBoolean\"\r\n    },\r\n    {\r\n        headerName: \"frameworkuser.RoleName_view\", field: \"RoleName_view\",\r\n    },\r\n    {\r\n        headerName: \"frameworkuser.GroupName_view\", field: \"GroupName_view\",\r\n    },\r\n]\r\n/**\r\n * 表格\r\n */\r\nexport default class extends React.Component<any, any> {\r\n    render() {\r\n        return <AgGrid\r\n            // 页面状态 \r\n            Store={Store}\r\n            // 列配置\r\n            columnDefs={columnDefs}\r\n            // 行操作 \r\n            rowAction={Action.rowAction}\r\n            // 行操作 col props 同 columnDefs配置相同\r\n            // rowActionCol={{ headerName: \"操作\" }}\r\n            // frameworkComponents={{\r\n            // }}\r\n            rowHeight={110}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { AuthorizeDecorator } from 'store/system/authorize';\r\nimport Store from './store';\r\nimport Action from './views/action';\r\nimport Other from './views/other';\r\nimport Search from './views/search';\r\nimport Table from './views/table';\r\n/**\r\n * 页面入口\r\n *  Action：页面动作\r\n *  Details：详情信息，添加，编辑，详情。\r\n *  Other：其他部件，导入导出\r\n *  Search：搜索参数\r\n *  Table：表格\r\n */\r\n@AuthorizeDecorator({ PageStore: Store })\r\nexport default class App extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className=\"app-page-frameworkuserbase\" key=\"app-page-frameworkuserbase\">\r\n        <Search {...this.props} />\r\n        <Action.pageAction {...this.props} />\r\n        <Table {...this.props} />\r\n        <Other {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}