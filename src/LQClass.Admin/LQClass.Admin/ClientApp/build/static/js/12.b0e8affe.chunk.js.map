{"version":3,"sources":["pages/actionlog/store/index.ts","pages/actionlog/views/models.tsx","pages/actionlog/views/forms.tsx","pages/actionlog/views/action.tsx","pages/actionlog/views/other.tsx","pages/actionlog/views/search.tsx","pages/actionlog/views/table.tsx","pages/actionlog/index.tsx"],"names":["BindAll","Apis","search","url","method","details","insert","update","delete","import","export","exportIds","template","DataSource","mergeLocales","props","label","id","rules","formItem","placeholder","getLocalesTemplate","txt","getLocalesValue","values","dataSource","Text","Value","mode","models","value","key","fieId","InfoForm","DialogFormDes","onFormSubmit","Store","onInsert","observer","Models","this","React","onUpdate","onLoadData","onDetails","getFieldDecorator","form","initialValue","defaultValues","display","ActionEvents","onImport","PageState","visiblePort","onExport","onExportIds","onDelete","data","onDeleteList","length","selectedRowKeys","confirm","title","text","onOk","a","onCancel","pageAction","DesError","disabled","className","visible","onAuthorizeActions","type","icon","onClick","overlay","Item","rowAction","showSubmit","loadData","onConfirm","DesForm","toJS","searchParams","columnDefs","headerName","field","enableRowGroup","Action","Component","App","AuthorizeDecorator","PageStore"],"mappings":"yMAkDe,MAhDdA,mBACD,qDACI,aAAe,uCACL,CAGFC,KAAM,CACFC,OAAQ,CACJC,IAAK,qBACLC,OAAQ,QAEZC,QAAS,CAELF,IAAK,mBACLC,OAAQ,OAEZE,OAAQ,CACJH,IAAK,kBACLC,OAAQ,QAEZG,OAAQ,CACJJ,IAAK,mBACLC,OAAQ,OAEZI,OAAQ,CACJL,IAAK,0BACLC,OAAQ,QAEZK,OAAQ,CACJN,IAAK,qBACLC,OAAQ,QAEZM,OAAQ,CACJP,IAAK,0BACLC,OAAQ,QAEZO,UAAW,CACPR,IAAK,+BACLC,OAAQ,QAEZQ,SAAU,CACNT,IAAK,+BACLC,OAAQ,UAzC5B,UAA2BS,OAA3B,G,0RCOAC,YAAa,CACT,QAAS,CACL,uBAAwB,eACxB,uBAAwB,eACxB,mBAAoB,eACpB,sBAAuB,MACvB,uBAAwB,2BACxB,qBAAsB,eACtB,mBAAoB,eACpB,eAAgB,KAChB,oBAAqB,eACrB,sBAAsB,eACtB,sBAAuB,eACvB,sBAAuB,gBAE3B,QAAS,CACL,uBAAwB,SACxB,uBAAwB,SACxB,mBAAoB,UACpB,sBAAuB,MACvB,uBAAwB,aACxB,qBAAsB,WACtB,mBAAoB,SACpB,eAAgB,KAChB,oBAAqB,UACrB,sBAAuB,SACvB,sBAAuB,YACvB,sBAAuB,WAShB,I,YAAA,WAKAC,GACP,MAAO,CAEH,oBAAoB,CAChBC,MAAO,gBAAC,IAAD,CAAkBC,GAAG,yBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,6BAGtG,oBAAoB,CAChBP,MAAO,gBAAC,IAAD,CAAkBC,GAAG,yBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,6BAGtG,gBAAgB,CACZP,MAAO,gBAAC,IAAD,CAAkBC,GAAG,qBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,yBAGtG,mBAAmB,CACfP,MAAO,gBAAC,IAAD,CAAkBC,GAAG,wBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,4BAGtG,oBAAoB,CAChBP,MAAO,gBAAC,IAAD,CAAkBC,GAAG,yBAC5BC,MAAO,GACPC,SAAU,gBAAC,IAAD,CAAeC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,6BAG9G,kBAAkB,CACdP,MAAO,gBAAC,IAAD,CAAkBC,GAAG,uBAC5BC,MAAO,CAAC,CAAE,UAAY,EAAM,QAAW,gBAAC,IAAD,CAAkBD,GAAG,sBAAsBO,OAAQ,CAAEF,IAAKC,YAAgB,2BACjHJ,SAAU,qBAAaC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,2BAG5G,gBAAgB,CACZP,MAAO,gBAAC,IAAD,CAAkBC,GAAG,qBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,yBAGtG,YAAY,CACRP,MAAO,gBAAC,IAAD,CAAkBC,GAAG,iBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,qBAGtG,iBAAiB,CACbP,MAAO,gBAAC,IAAD,CAAkBC,GAAG,sBAC5BC,MAAO,CAAC,CAAE,UAAY,EAAM,QAAW,gBAAC,IAAD,CAAkBD,GAAG,sBAAsBO,OAAQ,CAAEF,IAAKC,YAAgB,0BACjHJ,SAAU,gBAAC,IAAD,CAAWC,YAAaC,YAAmB,yBAA0B,CAAEC,IAAKC,YAAgB,uBAAyBE,WAAY,CACvI,CAAEC,KAAM,gBAAC,IAAD,CAAkBT,GAAG,wBAA0BU,MAAO,UAC9D,CAAED,KAAM,gBAAC,IAAD,CAAkBT,GAAG,wBAA0BU,MAAO,aAC9D,CAAED,KAAM,gBAAC,IAAD,CAAkBT,GAAG,wBAA0BU,MAAO,eA9DnE,WAwEEZ,GACT,MAAO,CAEH,OAAS,CACLC,MAAO,gBAAC,IAAD,CAAkBC,GAAG,qBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAY,MAGjC,UAAY,CACRJ,MAAO,gBAAC,IAAD,CAAkBC,GAAG,wBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAY,MAGjC,WAAa,CACTJ,MAAO,gBAAC,IAAD,CAAkBC,GAAG,yBAC5BC,MAAO,GACPC,SAAU,gBAAC,IAAD,CAAgBC,YAAY,MAG1C,GAAK,CACDJ,MAAO,gBAAC,IAAD,CAAkBC,GAAG,iBAC5BC,MAAO,GACPC,SAAU,qBAAOC,YAAY,MAGjC,QAAU,CACNJ,MAAO,gBAAC,IAAD,CAAkBC,GAAG,sBAC5BC,MAAO,GACPC,SAAU,gBAAC,IAAD,CAAWC,YAAaG,YAAgB,YAAaK,KAAK,WAAWH,WAAY,CACvF,CAAEC,KAAM,gBAAC,IAAD,CAAkBT,GAAG,wBAA0BU,MAAO,GAC9D,CAAED,KAAM,gBAAC,IAAD,CAAkBT,GAAG,wBAA0BU,MAAO,GAC9D,CAAED,KAAM,gBAAC,IAAD,CAAkBT,GAAG,wBAA0BU,MAAO,SAzGnE,WAkHEZ,GACT,OAAO,IAAWA,EAAMc,QAAQ,SAACC,EAAOC,GACpC,OAAO,gBAAC,IAAD,iBAAchB,EAAd,CAAqBiB,MAAOD,EAAKA,IAAKA,SC7E5CE,GA9EZC,YAAc,CACXC,aADW,SACEX,GACT,OAAOY,EAAMC,SAASb,KAI9B,GADCc,YACD,8MACIT,OAASU,EAAkB,EAAKxB,OADpC,uDAIQ,IAAMA,EAAK,2BACJyB,KAAKzB,OADD,IAGPc,OAAQW,KAAKX,SAEjB,OAAO,gBAAC,IAAD,KACH,gBAAC,IAAD,iBAAcd,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,mBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,sBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,qBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,mBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,eAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,yBAlBvC,GAAgCS,eAAhC,GA0BCP,YAAc,CACXC,aADW,SACEX,GACT,OAAOY,EAAMM,SAASlB,IAE1BmB,WAJW,SAIAnB,EAAQT,GACf,OAAOqB,EAAMQ,UAAUpB,KAI/B,GADCc,YACD,8MAEIT,OAASU,EAAkB,EAAKxB,OAFpC,uDAGc,IAEE8B,EADSL,KAAKzB,MAAd+B,KACAD,kBAEF9B,EAAK,2BACJyB,KAAKzB,OADD,IAGPc,OAAQW,KAAKX,SAIjB,OADAgB,EAAkB,YAAa,CAAEE,aAAc,IAAWP,KAAKzB,MAAMiC,cAAe,eAC7E,gBAAC,IAAD,KACH,gBAAC,IAAD,iBAAcjC,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,mBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,sBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,qBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,mBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,eAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,yBAvBvC,GAAgCS,eAAhC,GA+BCP,YAAc,CACXS,WADW,SACAnB,EAAQT,GACf,OAAOqB,EAAMQ,UAAUpB,KAI/B,GADCc,YACD,8MAEIT,OAASU,EAAkB,EAAKxB,OAFpC,uDAKQ,IAAMA,EAAK,2BACJyB,KAAKzB,OADD,IAGPc,OAAQW,KAAKX,OAEboB,SAAS,IAEb,OAAO,gBAAC,IAAD,KACH,gBAAC,IAAD,iBAAclC,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,mBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,sBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,uBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,qBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,mBAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,eAC3B,gBAAC,IAAD,iBAAcjB,EAAd,CAAqBiB,MAAM,yBArBvC,GAA8BS,eAA9B,OCxEaS,EAAe,CAIxBC,SAJwB,WAKpBf,EAAMgB,UAAUC,aAAc,GAKlCC,SAVwB,WAWpBlB,EAAMkB,YAKVC,YAhBwB,WAiBpBnB,EAAMmB,eAMVC,SAvBwB,SAuBfC,GACLrB,EAAMoB,SAASC,IAKnBC,aA7BwB,WA8BpB,IAAMC,EAASvB,EAAMvB,WAAW+C,gBAAgBD,OAChD,IAAME,QAAQ,CACVC,MAAOzC,YAAmB,uBAAwB,CAAE0C,KAAMJ,IAC1DK,KAAK,WAAD,4BAAE,sBAAAC,EAAA,sDACF7B,EAAMoB,SAASpB,EAAMvB,WAAW+C,iBAD9B,2CAAF,kDAAC,GAGLM,SALU,iBA4EP,GAIXC,WApEHC,Y,EACA9B,Y,yKAEa,IAGA+B,EAFsBjC,EAAMvB,WAA1B+C,gBAC6BD,OACL,EAChC,OACI,qBAAKW,UAAU,yBACX,gBAAC,IAAD,CAASC,QAASC,YAAmBpC,EAAO,WACxC,qBAASqC,KAAK,aACd,qBAAQC,KAAK,SAASC,QAASzB,EAAaQ,aAAcW,SAAUA,GAAU,gBAAC,IAAD,CAAkBpD,GAAG,oBAEvG,gBAAC,IAAD,CAASsD,QAASC,YAAmBpC,EAAO,WACxC,qBAASqC,KAAK,aACd,qBAAUG,QAAS,yBACf,oBAAMC,KAAN,KACI,qBAAGF,QAASzB,EAAaI,UAAU,gBAAC,IAAD,CAAkBrC,GAAG,uBAE5D,oBAAM4D,KAAN,CAAWR,SAAUA,GACjB,qBAAGM,QAASzB,EAAaK,aAAa,gBAAC,IAAD,CAAkBtC,GAAG,4BAG/D,qBAAQyD,KAAK,YAAY,gBAAC,IAAD,CAAkBzD,GAAG,0B,GArB7CwB,e,MAsErBqC,UAtCHV,Y,EACA9B,Y,yKAMa,IACEmB,EAASjB,KAAKzB,MAAd0C,KACR,OACI,qBAAKa,UAAU,wBACX,gBAAC,IAAD,CAASC,QAASC,YAAmBpC,EAAO,YACxC,gBAAC,IAAD,CACI0B,MAAO,gBAAC,IAAD,CAAkB7C,GAAG,gBAC5B8D,YAAY,EACZN,KAAK,KAEL,gBAAC,EAAD,CAAUO,SAAUvB,MAG5B,gBAAC,IAAD,CAASc,QAASC,YAAmBpC,EAAO,WACxC,qBAASqC,KAAK,aACd,qBAAYX,MAAO,gBAAC,IAAD,CAAkB7C,GAAG,uBAAuBO,OAAQ,CAAEuC,KAAM,MAAUkB,UAAW,WAAQ/B,EAAaM,SAASC,KAC9H,yBAAI,gBAAC,IAAD,CAAkBxC,GAAG,0B,GArBzBwB,e,+LCnFhB,OAAO,I,+BAGP,OAAO,gBAAC,WAAD,CAAgBV,IAAI,cACvB,gBAAC,IAAD,CAAaK,MAAOA,S,GANHK,a,mBCE5ByC,Y,EACA5C,Y,8MAGGT,OAASU,EAAoB,EAAKxB,O,uDAG9B,IAAMA,EAAK,2BACJyB,KAAKzB,OADD,IAEPc,OAAQW,KAAKX,OACbmB,cAAemC,eAAK/C,EAAMvB,WAAWuE,gBAEzC,OAAO,gBAAC,IAAD,CAIHhD,MAAOA,EACPU,KAAMN,KAAKzB,MAAM+B,MAEhBP,EAAoBxB,Q,GAjBJ0B,e,MCL7B3B,YAAa,CACT,QAAS,CACL,oBAAqB,eACrB,uBAAwB,eACxB,uBAAwB,eACxB,mBAAoB,eACpB,sBAAuB,MACvB,uBAAwB,2BACxB,qBAAsB,eACtB,eAAgB,KAChB,mBAAoB,gBAExB,QAAS,CACL,oBAAqB,UACrB,uBAAwB,SACxB,uBAAwB,SACxB,mBAAoB,UACpB,sBAAuB,MACvB,uBAAwB,aACxB,qBAAsB,WACtB,eAAgB,KAChB,mBAAoB,YAI5B,I,EAAMuE,GAAuC,CACzC,CACIC,WAAY,oBAAqBC,MAAO,WAE5C,CACID,WAAY,uBAAwBC,MAAO,cAE/C,CACID,WAAY,uBAAwBC,MAAO,cAE/C,CACID,WAAY,mBAAoBC,MAAO,UAE3C,CACID,WAAY,sBAAuBC,MAAO,aAE9C,CACID,WAAY,uBAAwBC,MAAO,cAE/C,CACID,WAAY,qBAAsBC,MAAO,YAE7C,CACID,WAAY,eAAgBC,MAAO,MAEvC,CACID,WAAY,mBAAoBC,MAAO,SAAUC,gBAAgB,I,0KAQjE,OAAO,kBAAC,IAAD,CAEHpD,MAAOA,EAEPiD,WAAYA,GAEZP,UAAWW,EAAOX,gB,GARDrC,IAAMiD,W,6CC/CdC,GADpBC,YAAmB,CAAEC,UAAWzD,G,0KAG7B,OACI,uBAAKkC,UAAU,qBAAqBvC,IAAI,sBACxC,gBAAC,EAAWS,KAAKzB,OACjB,gBAAC,EAAOoD,WAAe3B,KAAKzB,OAC5B,gBAAC,GAAUyB,KAAKzB,OAChB,gBAAC,EAAUyB,KAAKzB,Y,GAPS0B,e","file":"static/js/12.b0e8affe.chunk.js","sourcesContent":["import { BindAll } from 'lodash-decorators';\r\nimport DataSource from 'store/dataSource';\r\n@BindAll()\r\nexport class Store extends DataSource {\r\n    constructor() {\r\n        super({\r\n            // IdKey: \"ID\", 默认 ID\r\n            // Target: \"/api\", 默认 /api\r\n            Apis: {\r\n                search: {\r\n                    url: \"/_actionlog/search\",\r\n                    method: \"post\"\r\n                },\r\n                details: {\r\n                    // 支持 嵌套 参数 /user/{ID}/{AAA}/{BBB}\r\n                    url: \"/_actionlog/{ID}\",\r\n                    method: \"get\"\r\n                },\r\n                insert: {\r\n                    url: \"/_actionlog/add\",\r\n                    method: \"post\"\r\n                },\r\n                update: {\r\n                    url: \"/_actionlog/edit\",\r\n                    method: \"put\"\r\n                },\r\n                delete: {\r\n                    url: \"/_actionlog/BatchDelete\",\r\n                    method: \"post\"\r\n                },\r\n                import: {\r\n                    url: \"/_actionlog/import\",\r\n                    method: \"post\"\r\n                },\r\n                export: {\r\n                    url: \"/_actionlog/ExportExcel\",\r\n                    method: \"post\"\r\n                },\r\n                exportIds: {\r\n                    url: \"/_actionlog/ExportExcelByIds\",\r\n                    method: \"post\"\r\n                },\r\n                template: {\r\n                    url: \"/_actionlog/GetExcelTemplate\",\r\n                    method: \"get\"\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default new Store();","import { Input, Switch, Icon, Select, Upload, message, Modal,InputNumber } from 'antd';\r\nimport { WtmCascader, WtmCheckbox, WtmDatePicker, WtmEditor, WtmRadio, WtmSelect, WtmTransfer, WtmUploadImg, WtmUpload, WtmRangePicker} from 'components/form';\r\nimport { FormItem } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport lodash from 'lodash';\r\nimport Regular from 'utils/Regular';\r\nimport Store from '../store';\r\nimport { mergeLocales, getLocalesValue, getLocalesTemplate } from 'locale';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'actionlog.ModuleName': '模块',\r\n        'actionlog.ActionName': '动作',\r\n        'actionlog.ITCode': '账户',\r\n        'actionlog.ActionUrl': 'Url',\r\n        'actionlog.ActionTime': '操作时间',\r\n        'actionlog.Duration': '时长',\r\n        'actionlog.Remark': '备注',\r\n        'actionlog.IP': 'IP',\r\n        'actionlog.LogType': '类型',\r\n        'actionlog.LogType.0':'普通',\r\n        'actionlog.LogType.1': '异常',\r\n        'actionlog.LogType.2': '调试',\r\n    },\r\n    \"en-US\": {\r\n        'actionlog.ModuleName': 'Module',\r\n        'actionlog.ActionName': 'Action',\r\n        'actionlog.ITCode': 'Account',\r\n        'actionlog.ActionUrl': 'Url',\r\n        'actionlog.ActionTime': 'ActionTime',\r\n        'actionlog.Duration': 'Duration',\r\n        'actionlog.Remark': 'Remark',\r\n        'actionlog.IP': 'IP',\r\n        'actionlog.LogType': 'LogType',\r\n        'actionlog.LogType.0': 'Normal',\r\n        'actionlog.LogType.1': 'Exception',\r\n        'actionlog.LogType.2': 'Debug',\r\n    }\r\n});\r\n\r\n/**\r\n * label  标识\r\n * rules   校验规则，参考下方文档  https://ant.design/components/form-cn/#components-form-demo-validate-other\r\n * formItem  表单组件\r\n */\r\nexport default {\r\n    /**\r\n     * 表单模型 \r\n     * @param props \r\n     */\r\n    editModels(props?): WTM.FormItem {\r\n        return {\r\n            /** 模块 */\r\n            \"Entity.ModuleName\":{\r\n                label: <FormattedMessage id='actionlog.ModuleName' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.ModuleName') })} />\r\n            },\r\n            /** 动作 */\r\n            \"Entity.ActionName\":{\r\n                label: <FormattedMessage id='actionlog.ActionName' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.ActionName') })} />\r\n            },\r\n            /** ITCode */\r\n            \"Entity.ITCode\":{\r\n                label: <FormattedMessage id='actionlog.ITCode' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.ITCode') })} />\r\n            },\r\n            /** Url */\r\n            \"Entity.ActionUrl\":{\r\n                label: <FormattedMessage id='actionlog.ActionUrl' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.ActionUrl') })}/>\r\n            },\r\n            /** 操作时间 */\r\n            \"Entity.ActionTime\":{\r\n                label: <FormattedMessage id='actionlog.ActionTime' />,\r\n                rules: [],\r\n                formItem: <WtmDatePicker placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.ActionTime') })} />\r\n            },\r\n            /** 时长 */\r\n            \"Entity.Duration\":{\r\n                label: <FormattedMessage id='actionlog.Duration' />,\r\n                rules: [{ \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('actionlog.Duration') }} /> }],\r\n                formItem: <InputNumber placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.Duration') })} />\r\n            },\r\n            /** 备注 */\r\n            \"Entity.Remark\":{\r\n                label: <FormattedMessage id='actionlog.Remark' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.Remark') })} />\r\n            },\r\n            /** IP */\r\n            \"Entity.IP\":{\r\n                label: <FormattedMessage id='actionlog.IP' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.IP') })} />\r\n            },\r\n            /** 类型 */\r\n            \"Entity.LogType\":{\r\n                label: <FormattedMessage id='actionlog.LogType' />,\r\n                rules: [{ \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('actionlog.LogType') }} />}],\r\n                formItem: <WtmSelect placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('actionlog.LogType') })} dataSource={[  \r\n                    { Text: <FormattedMessage id='actionlog.LogType.0' />, Value: 'Normal' },\r\n                    { Text: <FormattedMessage id='actionlog.LogType.1' />, Value: 'Exception' },\r\n                    { Text: <FormattedMessage id='actionlog.LogType.2' />, Value: 'Debug' }\r\n                ]}/>\r\n            }\r\n\r\n        }\r\n    },\r\n    /**\r\n     * 搜索 模型 \r\n     * @param props \r\n     */\r\n    searchModels(props?): WTM.FormItem {\r\n        return {\r\n            /** ITCode */\r\n            \"ITCode\":{\r\n                label: <FormattedMessage id='actionlog.ITCode' />,\r\n                rules: [],\r\n                formItem: <Input placeholder=\"\" />\r\n            },\r\n            /** Url */\r\n            \"ActionUrl\":{\r\n                label: <FormattedMessage id='actionlog.ActionUrl' />,\r\n                rules: [],\r\n                formItem: <Input placeholder=\"\" />\r\n            },\r\n            /** 操作时间 */\r\n            \"ActionTime\":{\r\n                label: <FormattedMessage id='actionlog.ActionTime' />,\r\n                rules: [],\r\n                formItem: <WtmRangePicker placeholder=\"\" />\r\n            },\r\n            /** IP */\r\n            \"IP\":{\r\n                label: <FormattedMessage id='actionlog.IP' />,\r\n                rules: [],\r\n                formItem: <Input placeholder=\"\" />\r\n            },\r\n            /** 类型 */\r\n            \"LogType\":{\r\n                label: <FormattedMessage id='actionlog.LogType' />,\r\n                rules: [],\r\n                formItem: <WtmSelect placeholder={getLocalesValue('tips.all')} mode=\"multiple\" dataSource={[  \r\n                    { Text: <FormattedMessage id='actionlog.LogType.0' />, Value: 0 },\r\n                    { Text: <FormattedMessage id='actionlog.LogType.1' />, Value: 1 },\r\n                    { Text: <FormattedMessage id='actionlog.LogType.2' />, Value: 2 }\r\n                ]}/>\r\n            },\r\n\r\n        }\r\n    },\r\n    /**\r\n     * 渲染 模型\r\n     */\r\n    renderModels(props?) {\r\n        return lodash.map(props.models, (value, key) => {\r\n            return <FormItem {...props} fieId={key} key={key} />\r\n        })\r\n    }\r\n}\r\n","import { DialogFormDes, FormItem, InfoShellLayout } from 'components/dataView';\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store'; //页面状态\r\nimport Models from './models'; //模型\r\n\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        return Store.onInsert(values)\r\n    }\r\n})\r\n@observer\r\nexport class InsertForm extends React.Component<any, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        // item 的 props\r\n        const props = {\r\n            ...this.props,\r\n            // 模型\r\n            models: this.models,\r\n        }\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"Entity.ModuleName\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionName\" />\r\n            <FormItem {...props} fieId=\"Entity.ITCode\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionUrl\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionTime\" />\r\n            <FormItem {...props} fieId=\"Entity.Duration\" />\r\n            <FormItem {...props} fieId=\"Entity.Remark\" />\r\n            <FormItem {...props} fieId=\"Entity.IP\" />\r\n            <FormItem {...props} fieId=\"Entity.LogType\" />\r\n\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 修改表单\r\n */\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        return Store.onUpdate(values)\r\n    },\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class UpdateForm extends React.Component<WTM.FormProps, any> {\r\n    // 创建模型\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const { form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n        // item 的 props\r\n        const props = {\r\n            ...this.props,\r\n            // 模型\r\n            models: this.models,\r\n        }\r\n        // 声明 ID\r\n        getFieldDecorator('Entity.ID', { initialValue: lodash.get(this.props.defaultValues, 'Entity.ID') })\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"Entity.ModuleName\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionName\" />\r\n            <FormItem {...props} fieId=\"Entity.ITCode\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionUrl\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionTime\" />\r\n            <FormItem {...props} fieId=\"Entity.Duration\" />\r\n            <FormItem {...props} fieId=\"Entity.Remark\" />\r\n            <FormItem {...props} fieId=\"Entity.IP\" />\r\n            <FormItem {...props} fieId=\"Entity.LogType\" />\r\n\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 详情\r\n */\r\n@DialogFormDes({\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class InfoForm extends React.Component<WTM.FormProps, any> {\r\n    // 创建模型\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        // item 的 props\r\n        const props = {\r\n            ...this.props,\r\n            // 模型\r\n            models: this.models,\r\n            // 禁用\r\n            display: true,\r\n        }\r\n        return <InfoShellLayout >\r\n            <FormItem {...props} fieId=\"Entity.ModuleName\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionName\" />\r\n            <FormItem {...props} fieId=\"Entity.ITCode\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionUrl\" />\r\n            <FormItem {...props} fieId=\"Entity.ActionTime\" />\r\n            <FormItem {...props} fieId=\"Entity.Duration\" />\r\n            <FormItem {...props} fieId=\"Entity.Remark\" />\r\n            <FormItem {...props} fieId=\"Entity.IP\" />\r\n            <FormItem {...props} fieId=\"Entity.LogType\" />\r\n\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n","import { Button, Divider, Dropdown, Menu, Modal, Popconfirm, Row } from 'antd';\r\nimport { DialogForm, Visible } from 'components/dataView';\r\nimport { DesError } from 'components/decorators';\r\nimport { getLocalesTemplate } from 'locale';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { onAuthorizeActions } from 'store/system/authorize';\r\nimport Store from '../store';\r\nimport { InfoForm } from './forms';\r\n/**\r\n * 动作事件\r\n */\r\nexport const ActionEvents = {\r\n    /**\r\n     * 导入\r\n     */\r\n    onImport() {\r\n        Store.PageState.visiblePort = true;\r\n    },\r\n    /**\r\n     * 导出\r\n     */\r\n    onExport() {\r\n        Store.onExport()\r\n    },\r\n    /**\r\n     * 批量导出\r\n     */\r\n    onExportIds() {\r\n        Store.onExportIds()\r\n    },\r\n    /**\r\n     * 删除\r\n     * @param data \r\n     */\r\n    onDelete(data) {\r\n        Store.onDelete(data)\r\n    },\r\n    /**\r\n    * 删除\r\n    */\r\n    onDeleteList() {\r\n        const length = Store.DataSource.selectedRowKeys.length\r\n        Modal.confirm({\r\n            title: getLocalesTemplate('action.deleteConfirm', { text: length }),\r\n            onOk: async () => {\r\n                Store.onDelete(Store.DataSource.selectedRowKeys)\r\n            },\r\n            onCancel() { },\r\n        });\r\n    },\r\n}\r\n/**\r\n * 表格 所有 动作\r\n */\r\n@DesError\r\n@observer\r\nclass PageAction extends React.Component<any, any> {\r\n    render() {\r\n        const { selectedRowKeys } = Store.DataSource;\r\n        const deletelength = selectedRowKeys.length;\r\n        const disabled = deletelength < 1;\r\n        return (\r\n            <Row className=\"data-view-page-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button icon=\"delete\" onClick={ActionEvents.onDeleteList} disabled={disabled}><FormattedMessage id=\"action.delete\" /></Button>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"export\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Dropdown overlay={<Menu>\r\n                        <Menu.Item>\r\n                            <a onClick={ActionEvents.onExport}><FormattedMessage id=\"action.exportAll\" /></a>\r\n                        </Menu.Item>\r\n                        <Menu.Item disabled={disabled}>\r\n                            <a onClick={ActionEvents.onExportIds}><FormattedMessage id=\"action.exportSelect\" /></a>\r\n                        </Menu.Item>\r\n                    </Menu>}>\r\n                        <Button icon=\"download\" ><FormattedMessage id=\"action.export\" /></Button>\r\n                    </Dropdown>\r\n                </Visible>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n/**\r\n * 表格 行 动作\r\n */\r\n@DesError\r\n@observer\r\nclass RowAction extends React.Component<{\r\n    /** 数据详情 */\r\n    data: any;\r\n    [key: string]: any;\r\n}, any> {\r\n    render() {\r\n        const { data } = this.props\r\n        return (\r\n            <Row className=\"data-view-row-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"details\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.info\" />}\r\n                        showSubmit={false}\r\n                        type=\"a\"\r\n                    >\r\n                        <InfoForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Popconfirm title={<FormattedMessage id=\"action.deleteConfirm\" values={{ text: '' }} />} onConfirm={() => { ActionEvents.onDelete(data) }} >\r\n                        <a ><FormattedMessage id=\"action.delete\" /></a>\r\n                    </Popconfirm>\r\n                </Visible>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default {\r\n    /**\r\n     * 页面动作\r\n     */\r\n    pageAction: PageAction,\r\n    /**\r\n     * 数据行动作\r\n     */\r\n    rowAction: RowAction\r\n}","import { ImportModal } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\n\r\n/**\r\n * 其他弹框类组件\r\n */\r\nexport default class extends React.Component<any, any>{\r\n    shouldComponentUpdate() {\r\n        return false\r\n    }\r\n    render() {\r\n        return <React.Fragment key=\"page-other\">\r\n            <ImportModal Store={Store} />\r\n        </React.Fragment>\r\n    }\r\n}","import { FormItem } from 'components/dataView';\r\nimport { DataViewSearch } from 'components/dataView/header/search';\r\nimport { DesForm } from 'components/decorators';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\nimport Models from './models'; \r\n\r\n@DesForm\r\n@observer\r\nexport default class extends React.Component<any, any> {\r\n    // 创建模型\r\n    models = Models.searchModels(this.props);\r\n    render() {\r\n        // item 的 props\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            defaultValues: toJS(Store.DataSource.searchParams)\r\n        }\r\n        return <DataViewSearch\r\n            // columnCount={4} 默认全局\r\n            // onReset={() => { }} 覆盖默认方法\r\n            // onSubmit={() => { }} 覆盖默认方法\r\n            Store={Store}\r\n            form={this.props.form}\r\n        >\r\n            {Models.renderModels(props)}\r\n        </DataViewSearch>\r\n    }\r\n}","import { ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { AgGrid } from 'components/dataView';\r\nimport { mergeLocales } from 'locale';\r\nimport React from 'react';\r\nimport Store from '../store';\r\nimport Action from './action';\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'actionlog.LogType': '类型',\r\n        'actionlog.ModuleName': '模块',\r\n        'actionlog.ActionName': '动作',\r\n        'actionlog.ITCode': '账号',\r\n        'actionlog.ActionUrl': 'Url',\r\n        'actionlog.ActionTime': '操作时间',\r\n        'actionlog.Duration': '时长',\r\n        'actionlog.IP': 'IP',\r\n        'actionlog.Remark': '备注',\r\n    },\r\n    \"en-US\": {\r\n        'actionlog.LogType': 'LogType',\r\n        'actionlog.ModuleName': 'Module',\r\n        'actionlog.ActionName': 'Action',\r\n        'actionlog.ITCode': 'Account',\r\n        'actionlog.ActionUrl': 'Url',\r\n        'actionlog.ActionTime': 'ActionTime',\r\n        'actionlog.Duration': 'Duration',\r\n        'actionlog.IP': 'IP',\r\n        'actionlog.Remark': 'Remark',\r\n    }\r\n});\r\n// 列配置\r\nconst columnDefs: (ColDef | ColGroupDef)[] = [\r\n    {\r\n        headerName: \"actionlog.LogType\", field: \"LogType\",\r\n    },\r\n    {\r\n        headerName: \"actionlog.ModuleName\", field: \"ModuleName\"\r\n    },\r\n    {\r\n        headerName: \"actionlog.ActionName\", field: \"ActionName\"\r\n    },\r\n    {\r\n        headerName: \"actionlog.ITCode\", field: \"ITCode\"\r\n    },\r\n    {\r\n        headerName: \"actionlog.ActionUrl\", field: \"ActionUrl\",\r\n    },\r\n    {\r\n        headerName: \"actionlog.ActionTime\", field: \"ActionTime\",\r\n    },\r\n    {\r\n        headerName: \"actionlog.Duration\", field: \"Duration\"\r\n    },\r\n    {\r\n        headerName: \"actionlog.IP\", field: \"IP\",\r\n    },\r\n    {\r\n        headerName: \"actionlog.Remark\", field: \"Remark\", enableRowGroup: false\r\n    },\r\n]\r\n/**\r\n * 表格\r\n */\r\nexport default class extends React.Component<any, any> {\r\n    render() {\r\n        return <AgGrid\r\n            // 页面状态 \r\n            Store={Store}\r\n            // 列配置\r\n            columnDefs={columnDefs}\r\n            // 行操作 \r\n            rowAction={Action.rowAction}\r\n\r\n        // 行操作 col props 同 columnDefs配置相同\r\n        // rowActionCol={{ headerName: \"操作\" }}\r\n        // frameworkComponents={{\r\n        // }}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { AuthorizeDecorator } from 'store/system/authorize';\r\nimport Store from './store';\r\nimport Action from './views/action';\r\nimport Other from './views/other';\r\nimport Search from './views/search';\r\nimport Table from './views/table';\r\n/**\r\n * 页面入口\r\n *  Action：页面动作\r\n *  Details：详情信息，添加，编辑，详情。\r\n *  Other：其他部件，导入导出\r\n *  Search：搜索参数\r\n *  Table：表格\r\n */\r\n@AuthorizeDecorator({ PageStore: Store })\r\nexport default class App extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n        <div className=\"app-page-actionlog\" key=\"app-page-actionlog\">\r\n        <Search {...this.props} />\r\n        <Action.pageAction {...this.props} />\r\n        <Table {...this.props} />\r\n        <Other {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}