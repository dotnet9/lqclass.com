{"version":3,"sources":["app/pages/home/en.tsx","app/pages/home/zh.tsx","app/pages/home/index.tsx"],"names":["IApp","gutter","span","title","style","minHeight","href","target","React","this","props","intl","locale","injectIntl"],"mappings":"mPAEqBA,E,uKAEb,OACI,2BACI,qBAAKC,OAAQ,IACT,qBAAKC,KAAM,IACP,qBAAMC,MAAM,sDAAsDC,MAAO,CAAEC,UAAW,MAClF,4XAGA,sVAGA,8KACsJ,qBAAGC,KAAK,oCAAoCC,OAAO,UAAnD,wCAI9J,qBAAKL,KAAM,IACP,qBAAMC,MAAM,yBAAyBC,MAAO,CAAEC,UAAW,MACrD,qJACA,8PACA,wUAKZ,0BACA,qBAAKJ,OAAQ,IACT,qBAAKC,KAAM,IACP,qBAAMC,MAAM,qBAAqBC,MAAO,CAAEC,UAAW,MACjD,gEACA,kFACA,4HACA,6HACA,4FACA,2FACA,gHACA,yGACA,0FACA,2FAGR,qBAAKH,KAAM,IACP,qBAAMC,MAAM,iBAAiBC,MAAO,CAAEC,UAAW,MAC7C,6UAGA,8PAEA,0EACwC,qBAAGC,KAAK,oCAAoCC,OAAO,UAAnD,sCAGxC,mEACiC,qBAAGD,KAAK,+BAA+BC,OAAO,UAA9C,iCAGjC,8DAC4B,qBAAGD,KAAK,8DAA8DC,OAAO,UAA7E,mBAG5B,wF,GA9DMC,aCAbR,E,uKAEb,OACI,2BACI,qBAAKC,OAAQ,IACT,qBAAKC,KAAM,IACP,qBAAMC,MAAM,oEAAuBC,MAAO,CAAEC,UAAW,MACnD,+jBACA,ofACA,6HAAoB,qBAAGC,KAAK,oCAAoCC,OAAO,UAAnD,wCAG5B,qBAAKL,KAAM,IACP,qBAAMC,MAAM,oCAAWC,MAAO,CAAEC,UAAW,MACvC,8MACA,2UACA,8eAKZ,0BACA,qBAAKJ,OAAQ,IACT,qBAAKC,KAAM,IACP,qBAAMC,MAAM,2BAAOC,MAAO,CAAEC,UAAW,MACnC,sEACA,uJACA,4JACA,oIACA,0HACA,wKACA,8JACA,4KACA,2GACA,2GAGR,qBAAKH,KAAM,IACP,qBAAMC,MAAM,2BAAOC,MAAO,CAAEC,UAAW,MACnC,6mBAIA,onBAIA,qiBAIA,mFACc,qBAAGC,KAAK,oCAAoCC,OAAO,UAAnD,sCAGd,mFACc,qBAAGD,KAAK,+BAA+BC,OAAO,UAA9C,iCAGd,mFACc,qBAAGD,KAAK,8DAA8DC,OAAO,UAA7E,yCAGd,iG,GA/DMC,aCG5BR,E,uKAEE,OAAQS,KAAKC,MAAMC,KAAKC,QACpB,IAAK,QACD,OAAO,gBAAC,EAAD,MACX,QACI,OAAO,gBAAC,EAAD,W,GANJJ,aAUJK,sBAAWb","file":"static/js/11.2b7d0a34.chunk.js","sourcesContent":["import { Card, Col, Row, Divider } from 'antd';\r\nimport * as React from 'react';\r\nexport default class IApp extends React.Component<any, any> {\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <Row gutter={16} >\r\n                    <Col span={12}>\r\n                        <Card title=\"WTM -- make the best. NETCORE open source framework\" style={{ minHeight: 250 }} >\r\n                            <p>\r\n                                Walkingtec.mvvm framework (WTM for short) was first developed in 2013 ,based on asp.net mvc3 and the earliest Entity Framework. It was mainly used to solve the problems of low coding efficiency and inconsistent code style. Based on dozens of projects,the framework has been gradually improved and four major versions have been launched during 4 years.\r\n                            </p>\r\n                            <p>\r\n                                In September 2017, we transplanted the code to. Net core and carried out deep optimization and reconstruction. We launched a new framework based on asp.net core and EF core. The new framework has made great progress in architecture, stability and speed. It really become a powerful tool for efficient development.\r\n                            </p>\r\n                            <p>\r\n                                We are happy to provide the open-source framework now. Please feel free to send us a note. let us know how we are doing and what you need.Thanks! <a href=\"https://github.com/dotnetcore/WTM\" target=\"_blank\" >https://github.com/dotnetcore/WTM</a>\r\n                            </p>\r\n              </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card title=\"Problems solved by WTM\" style={{ minHeight: 250 }} >\r\n                            <p>WTM framework greatly improves development efficiency by structures conventional coding and automates repetitive coding.</p>\r\n                            <p>In non-separation mode, it connects front-end UI with back-end code. You don't need to separate the front and back platform. You don't need two people to cooperate. WTM helps you to reduce the cost and shorten the R&D period.</p>\r\n                            <p>In the mode of front-end and back-end separation, both front-end and back-end code can also be generated at the same time by the code generators. It greatly reduce the communication cost of front-end and back-end personnel. In this way , ‘separation’ is no longer complex and expensive.</p>\r\n              </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Divider />\r\n                <Row gutter={16} >\r\n                    <Col span={12}>\r\n                        <Card title=\"Framework features\" style={{ minHeight: 500 }} >\r\n                            <p>  One click to generate WTM project</p>\r\n                            <p>  One click to generate add, delete, modify and query</p>\r\n                            <p>  Support identification and code generation of one-to-many and many-to-many association models</p>\r\n                            <p>  support front-back end separation mode (React+AntD,Vue+Element) and non-separation mode(LayUI)</p>\r\n                            <p>  Support many databases, sqlserver, MySQL ,PgSQL , Sqlite..etc</p>\r\n                            <p>  Encapsulates most of the controls of layUI, antd and element</p>\r\n                            <p>  A lot of base classes are provided ,encapsulate most common background operations</p>\r\n                            <p>  Provide common modules such as users, roles, user groups, menus, logs, etc</p>\r\n                            <p>  Support the development and configuration of data authority</p>\r\n                            <p>  Supportread/ write splitting ;Support database sub Library</p>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card title=\"Author's words\" style={{ minHeight: 500 }}>\r\n                            <p>\r\n                                WTM framework, full name walkingtec MVVM. Walkingtec is my own company. WTM is a rapid development framework.How fast ? At least at present, in the open source project of DotNetcore, I haven't seen another faster one. Our goal of WTM is to speed up the development and reduce cost to the greatest extent.\r\n</p>\r\n                            <p>\r\n                                WTM has been loved by more and more developers since its open source. WTM will surely repay your love with a more mature and stable version.Specially thanks to（layui.com Improve yourself, benefit others, we am not alone!</p>\r\n                            <p>\r\n                                —— Open source address of framework:<a href=\"https://github.com/dotnetcore/WTM\" target=\"_blank\" >https://github.com/dotnetcore/WTM</a>\r\n\r\n                            </p>\r\n                            <p>\r\n                                —— Framework online document:<a href=\"https://wtmdoc.walkingtec.cn\" target=\"_blank\" >https://wtmdoc.walkingtec.cn</a>\r\n\r\n                            </p>\r\n                            <p>\r\n                                —— Framework update log:<a href=\"https://github.com/dotnetcore/WTM/blob/develop/CHANGELOG.md\" target=\"_blank\">view changelog</a>\r\n\r\n                            </p>\r\n                            <p>\r\n                                —— Frame QQ communication group:694148336\r\n\r\n</p>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Card, Col, Row, Divider } from 'antd';\r\nimport * as React from 'react';\r\nexport default class IApp extends React.Component<any, any> {\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <Row gutter={16} >\r\n                    <Col span={12}>\r\n                        <Card title=\"WTM—做最好的.netcore开源框架\" style={{ minHeight: 250 }} >\r\n                            <p>WalkingTec.Mvvm框架（简称WTM）最早开发与2013年，基于Asp.net MVC3 和 最早的Entity Framework, 当初主要是为了解决公司内部开发效率低，代码风格不统一的问题。经历了四年间数十个项目的考验，框架逐步的完善，推出了四个主要版本。</p>\r\n                            <p>2017年9月，我们将代码移植到了.Net Core上，并进行了深度优化和重构，推出了基于Asp.net Core和EF Core的全新框架，新框架在架构，稳定性，速度上都有长足进步，真正成为一款高效开发的利器。</p>\r\n                            <p>框架已开源，欢迎大家提出宝贵意见 <a href=\"https://github.com/dotnetcore/WTM\" target=\"_blank\" >https://github.com/dotnetcore/WTM</a></p>\r\n              </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card title=\"WTM解决的问题\" style={{ minHeight: 250 }} >\r\n                            <p>WTM框架把常规编码结构化，重复编码自动化，极大地提高了开发效率</p>\r\n                            <p>在不分离的模式下，它连通了前台UI和后台代码。你不需要前后台分离，不需要两个人配合，减少成本，缩短工期。</p>\r\n                            <p>在前后端分离的模式下，同样可以使用代码生成器同时生成前台和后台的代码，极大的降低了前后端人员的沟通成本，从本质上提升了开发效率，让“分离”不再复杂和昂贵。</p>\r\n              </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Divider />\r\n                <Row gutter={16} >\r\n                    <Col span={12}>\r\n                        <Card title=\"框架特点\" style={{ minHeight: 500 }} >\r\n                            <p>  一键生成WTM项目</p>\r\n                            <p>  一键生成增删改查，导入导出，批量操作代码</p>\r\n                            <p> 支持一对多，多对多关联模型的识别和代码生成</p>\r\n                            <p>支持分离(React+AntD,Vue+Element)和不分离(LayUI)两种模式</p>\r\n                            <p>  支持sqlserver，mysql，pgsql，sqlite等多种数据库</p>\r\n                            <p>   封装了Layui，AntD，Element的大部分控件，编写前台更加简便</p>\r\n                            <p>   提供了很多基类，封装了绝大部分后台常用操作</p>\r\n                            <p>     提供了用户，角色，用户组，菜单，日志等常用模块</p>\r\n                            <p>      支持数据权限的开发和配置</p>\r\n                            <p>    支持读写分离和数据库分库</p>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card title=\"作者的话\" style={{ minHeight: 500 }}>\r\n                            <p>\r\n                                WTM框架，全称WalkingTec MVVM（不是“我特么”的拼音首字母），WTM是一个快速开发框架，有多快？至少目前dotnetcore的开源项目中，我还没有见到更接地气，开发速度更快的框架。WTM的设计理念就是最大程度的加快开发速度，降低开发成本。\r\n\r\n</p>\r\n                            <p>\r\n                                国内Java一家独大原因很多，有BAT的示范效应，也有微软自己战略的失误。好在微软这两年终于想明白了， dotnet core的横空出世和收购github都是非常正确的方向。当然要想达到java一样的生态还有很长的路要走，那我就贡献一点绵薄之力吧。\r\n\r\n</p>\r\n                            <p>\r\n                                WTM开源以来，受到了越来越多开发者的喜爱，WTM必将以更加成熟稳定的姿态回报各位的喜爱。特别鸣谢贤心（layui.com），授权WTM开发的项目可以免费使用其收费版的LayuiAdmin。提高自己，造福他人，吾道不孤！\r\n\r\n</p>\r\n                            <p>\r\n                                —— 框架开源地址：<a href=\"https://github.com/dotnetcore/WTM\" target=\"_blank\" >https://github.com/dotnetcore/WTM</a>\r\n\r\n                            </p>\r\n                            <p>\r\n                                —— 框架在线文档：<a href=\"https://wtmdoc.walkingtec.cn\" target=\"_blank\" >https://wtmdoc.walkingtec.cn</a>\r\n\r\n                            </p>\r\n                            <p>\r\n                                —— 框架更新日志：<a href=\"https://github.com/dotnetcore/WTM/blob/develop/CHANGELOG.md\" target=\"_blank\">查看更新日志</a>\r\n\r\n                            </p>\r\n                            <p>\r\n                                —— 框架QQ交流群：694148336\r\n\r\n</p>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// import 'echarts';\r\nimport * as React from 'react';\r\nimport { injectIntl, FormattedDate } from 'react-intl';\r\nimport En from './en';\r\nimport Zh from './zh';\r\nclass IApp extends React.Component<any, any> {\r\n    public render() {\r\n        switch (this.props.intl.locale) {\r\n            case \"en-US\":\r\n                return <En />\r\n            default:\r\n                return <Zh />\r\n        }\r\n    }\r\n}\r\nexport default injectIntl(IApp)\r\n"],"sourceRoot":""}