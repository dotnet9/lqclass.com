{"version":3,"sources":["pages/frameworkgroup/store/index.ts","pages/frameworkgroup/views/models.tsx","pages/frameworkgroup/views/forms.tsx","pages/frameworkgroup/views/action.tsx","pages/frameworkgroup/views/other.tsx","pages/frameworkgroup/views/search.tsx","pages/frameworkgroup/views/table.tsx","pages/frameworkgroup/index.tsx","store/dataSource/index.tsx"],"names":["BindAll","Apis","search","url","method","details","insert","update","delete","import","export","exportIds","template","DataSource","mergeLocales","props","label","id","rules","values","txt","getLocalesValue","formItem","placeholder","getLocalesTemplate","models","value","key","fieId","InsertForm","DialogFormDes","onFormSubmit","Store","onInsert","observer","Models","this","React","UpdateForm","onUpdate","onLoadData","onDetails","form","getFieldDecorator","hidden","display","InfoForm","ActionEvents","onImport","PageState","visiblePort","onExport","onExportIds","onDelete","data","onDeleteList","length","selectedRowKeys","confirm","title","text","onOk","a","onCancel","pageAction","DesError","deletelength","disabled","className","visible","onAuthorizeActions","icon","type","loadData","onClick","overlay","Item","rowAction","showSubmit","onConfirm","DesForm","defaultValues","toJS","searchParams","columnDefs","headerName","field","Action","Component","App","AuthorizeDecorator","PageStore","options","IdKey","Target","globalConfig","target","Observable","PageObservable","params","tableLoading","onSearch","res","tableList","success","message","error","UploadFileId","onErrorMessage","FileId","RequestFiles","download","Request","compatibleUrl","body","ids","dataSource","duration","description","itemLayout","renderItem","item","style","width","span","e","onFileDownload","SortInfo","Page","Limit","runInAction","ajax","pipe","map","Data","obj","Help","GUID","Count","PageCount","toPromise","_tableLoading","_visiblePort","observable","computed","_tableList","_details","_searchParams","_selectedRowData","_selectedRowKeys"],"mappings":"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","file":"static/js/10.a8751224.chunk.js","sourcesContent":["import { BindAll } from 'lodash-decorators';\r\nimport DataSource from 'store/dataSource';\r\n@BindAll()\r\nexport class Store extends DataSource {\r\n    constructor() {\r\n        super({\r\n            // IdKey: \"ID\", 默认 ID\r\n            // Target: \"/api\", 默认 /api\r\n            Apis: {\r\n                search: {\r\n                    url: \"/_frameworkgroup/search\",\r\n                    method: \"post\"\r\n                },\r\n                details: {\r\n                    // 支持 嵌套 参数 /user/{ID}/{AAA}/{BBB}\r\n                    url: \"/_frameworkgroup/{ID}\",\r\n                    method: \"get\"\r\n                },\r\n                insert: {\r\n                    url: \"/_frameworkgroup/add\",\r\n                    method: \"post\"\r\n                },\r\n                update: {\r\n                    url: \"/_frameworkgroup/edit\",\r\n                    method: \"put\"\r\n                },\r\n                delete: {\r\n                    url: \"/_frameworkgroup/BatchDelete\",\r\n                    method: \"post\"\r\n                },\r\n                import: {\r\n                    url: \"/_frameworkgroup/import\",\r\n                    method: \"post\"\r\n                },\r\n                export: {\r\n                    url: \"/_frameworkgroup/ExportExcel\",\r\n                    method: \"post\"\r\n                },\r\n                exportIds: {\r\n                    url: \"/_frameworkgroup/ExportExcelByIds\",\r\n                    method: \"post\"\r\n                },\r\n                template: {\r\n                    url: \"/_frameworkgroup/GetExcelTemplate\",\r\n                    method: \"get\"\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default new Store();","import { Input, Switch, Icon, Select, Upload, message, Modal,InputNumber } from 'antd';\r\nimport { WtmCascader, WtmCheckbox, WtmDatePicker, WtmEditor, WtmRadio, WtmSelect, WtmTransfer, WtmUploadImg, WtmUpload } from 'components/form';\r\nimport { FormItem } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport lodash from 'lodash';\r\nimport Regular from 'utils/Regular';\r\nimport Request from 'utils/Request';\r\nimport { mergeLocales, getLocalesValue, getLocalesTemplate } from 'locale';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'frameworkgroup.GroupCode': '用户组编码',\r\n        'frameworkgroup.GroupName': '用户组名称',\r\n        'frameworkgroup.GroupRemark': '备注',\r\n    },\r\n    \"en-US\": {\r\n        'frameworkgroup.GroupCode': 'GroupCode',\r\n        'frameworkgroup.GroupName': 'GroupName',\r\n        'frameworkgroup.GroupRemark': 'Remark',\r\n    }\r\n});\r\n\r\n/**\r\n * label  标识\r\n * rules   校验规则，参考下方文档  https://ant.design/components/form-cn/#components-form-demo-validate-other\r\n * formItem  表单组件\r\n */\r\nexport default {\r\n    /**\r\n     * 表单模型 \r\n     * @param props \r\n     */\r\n    editModels(props?): WTM.FormItem {\r\n        return {\r\n            /** 用户组编码 */\r\n            \"Entity.GroupCode\":{\r\n                label: <FormattedMessage id='frameworkgroup.GroupCode' />,\r\n                rules: [{ \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('frameworkgroup.GroupCode') }} /> }],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkgroup.GroupCode') })} />\r\n            },\r\n            /** 用户组名称 */\r\n            \"Entity.GroupName\":{\r\n                label: <FormattedMessage id='frameworkgroup.GroupName' />,\r\n                rules: [{ \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('frameworkgroup.GroupName') }} /> }],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkgroup.GroupName') })} />\r\n            },\r\n            /** 备注 */\r\n            \"Entity.GroupRemark\":{\r\n                label: <FormattedMessage id='frameworkgroup.GroupRemark' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkgroup.GroupRemark') })} />\r\n            }\r\n\r\n        }\r\n    },\r\n    /**\r\n     * 搜索 模型 \r\n     * @param props \r\n     */\r\n    searchModels(props?): WTM.FormItem {\r\n        return {\r\n            /** 用户组编码 */\r\n            \"GroupCode\":{\r\n                label: <FormattedMessage id='frameworkgroup.GroupCode' />,\r\n                rules: [],\r\n                formItem: <Input placeholder=\"\" />\r\n            },\r\n            /** 用户组名称 */\r\n            \"GroupName\":{\r\n                label: <FormattedMessage id='frameworkgroup.GroupName' />,\r\n                rules: [],\r\n                formItem: <Input placeholder=\"\" />\r\n            },\r\n\r\n        }\r\n    },\r\n    /**\r\n     * 渲染 模型\r\n     */\r\n    renderModels(props?) {\r\n        return lodash.map(props.models, (value, key) => {\r\n            return <FormItem {...props} fieId={key} key={key} />\r\n        })\r\n    },\r\n\r\n    getValue(props: WTM.FormProps, fieId) {\r\n        return lodash.toString(props.form.getFieldValue(fieId) || lodash.get(props.defaultValues, fieId));\r\n    }\r\n}\r\n","import { Col } from 'antd';\r\nimport { DialogForm, DialogFormDes, DialogFormSubmit, FormItem, InfoShellLayout, DialogLoadData, } from 'components/dataView';\r\nimport { DesError } from 'components/decorators'; //错误\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store'; //页面状态\r\nimport Models from './models'; //模型\r\n\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        return Store.onInsert(values)\r\n    }\r\n})\r\n@observer\r\nexport class InsertForm extends React.Component<any, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n        }\r\n        return <InfoShellLayout>\r\n                <FormItem {...props} fieId=\"Entity.GroupCode\" />\r\n                <FormItem {...props} fieId=\"Entity.GroupName\" />\r\n                <FormItem {...props} fieId=\"Entity.GroupRemark\" />\r\n\r\n            </InfoShellLayout>        \r\n    }\r\n}\r\n/**\r\n * 修改表单\r\n */\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        return Store.onUpdate(values)\r\n    },\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class UpdateForm extends React.Component<WTM.FormProps, any> {\r\n    // 创建模型\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const { form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n        }\r\n        return <InfoShellLayout>\r\n                <FormItem {...props} fieId=\"Entity.ID\" hidden />\r\n            <FormItem {...props} fieId=\"Entity.GroupCode\" display/>\r\n                <FormItem {...props} fieId=\"Entity.GroupName\" />\r\n                <FormItem {...props} fieId=\"Entity.GroupRemark\" />\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 详情\r\n */\r\n@DialogFormDes({\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class InfoForm extends React.Component<WTM.FormProps, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            display: true,\r\n        }\r\n        return <InfoShellLayout >\r\n                <FormItem {...props} fieId=\"Entity.GroupCode\" />\r\n                <FormItem {...props} fieId=\"Entity.GroupName\" />\r\n                <FormItem {...props} fieId=\"Entity.GroupRemark\" />\r\n\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n","import { Button, Divider, Dropdown, Menu, Modal, Popconfirm, Row } from 'antd';\r\nimport { DialogForm, Visible } from 'components/dataView';\r\nimport { DesError } from 'components/decorators';\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { onAuthorizeActions } from 'store/system/authorize';\r\nimport Store from '../store';\r\nimport { InfoForm, InsertForm, UpdateForm } from './forms';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { getLocalesTemplate } from 'locale';\r\n/**\r\n * 动作事件\r\n */\r\nexport const ActionEvents = {\r\n    /**\r\n     * 导入\r\n     */\r\n    onImport() {\r\n        Store.PageState.visiblePort = true;\r\n    },\r\n    /**\r\n     * 导出\r\n     */\r\n    onExport() {\r\n        Store.onExport()\r\n    },\r\n    /**\r\n     * 批量导出\r\n     */\r\n    onExportIds() {\r\n        Store.onExportIds()\r\n    },\r\n    /**\r\n     * 删除\r\n     * @param data \r\n     */\r\n    onDelete(data) {\r\n        Store.onDelete(data)\r\n    },\r\n    /**\r\n    * 删除\r\n    */\r\n    onDeleteList() {\r\n        const length = Store.DataSource.selectedRowKeys.length\r\n        Modal.confirm({\r\n            title: getLocalesTemplate('action.deleteConfirm', { text: length }),\r\n            onOk: async () => {\r\n                Store.onDelete(Store.DataSource.selectedRowKeys)\r\n            },\r\n            onCancel() { },\r\n        });\r\n    },\r\n}\r\n/**\r\n * 表格 所有 动作\r\n */\r\n@DesError\r\n@observer\r\nclass PageAction extends React.Component<any, any> {\r\n    render() {\r\n        const { selectedRowKeys } = Store.DataSource;\r\n        const deletelength = selectedRowKeys.length;\r\n        const disabled = deletelength < 1;\r\n        return (\r\n            <Row className=\"data-view-page-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"insert\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.insert\" />}\r\n                        icon=\"plus\"\r\n                    >\r\n                        <InsertForm />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"update\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.update\" />}\r\n                        icon=\"edit\"\r\n                        disabled={deletelength != 1}\r\n                    >\r\n                        <UpdateForm loadData={() => (lodash.find(selectedRowKeys))} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button icon=\"delete\" onClick={ActionEvents.onDeleteList} disabled={disabled}><FormattedMessage id=\"action.delete\" /></Button>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"import\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button icon=\"folder-add\" onClick={ActionEvents.onImport}><FormattedMessage id=\"action.import\" /></Button>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"export\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Dropdown overlay={<Menu>\r\n                        <Menu.Item>\r\n                            <a onClick={ActionEvents.onExport}><FormattedMessage id=\"action.exportAll\" /></a>\r\n                        </Menu.Item>\r\n                        <Menu.Item disabled={disabled}>\r\n                            <a onClick={ActionEvents.onExportIds}><FormattedMessage id=\"action.exportSelect\" /></a>\r\n                        </Menu.Item>\r\n                    </Menu>}>\r\n                        <Button icon=\"download\" ><FormattedMessage id=\"action.export\" /></Button>\r\n                    </Dropdown>\r\n                </Visible>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n/**\r\n * 表格 行 动作\r\n */\r\n@DesError\r\n@observer\r\nclass RowAction extends React.Component<{\r\n    /** 数据详情 */\r\n    data: any;\r\n    [key: string]: any;\r\n}, any> {\r\n    render() {\r\n        const { data } = this.props\r\n        return (\r\n            <Row className=\"data-view-row-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"details\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.info\" />}\r\n                        showSubmit={false}\r\n                        type=\"a\"\r\n                    >\r\n                        <InfoForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"update\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.update\" />}\r\n                        type=\"a\"\r\n                    >\r\n                        <UpdateForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Popconfirm title={<FormattedMessage id=\"action.deleteConfirm\" values={{ text: '' }} />} onConfirm={() => { ActionEvents.onDelete(data) }} >\r\n                        <a ><FormattedMessage id=\"action.delete\" /></a>\r\n                    </Popconfirm>\r\n                </Visible>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default {\r\n    /**\r\n     * 页面动作\r\n     */\r\n    pageAction: PageAction,\r\n    /**\r\n     * 数据行动作\r\n     */\r\n    rowAction: RowAction\r\n}","import { ImportModal } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\n\r\n/**\r\n * 其他弹框类组件\r\n */\r\nexport default class extends React.Component<any, any>{\r\n    shouldComponentUpdate() {\r\n        return false\r\n    }\r\n    render() {\r\n        return <React.Fragment key=\"page-other\">\r\n            <ImportModal Store={Store} />\r\n        </React.Fragment>\r\n    }\r\n}","import { FormItem } from 'components/dataView';\r\nimport { DataViewSearch } from 'components/dataView/header/search';\r\nimport { DesForm } from 'components/decorators';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\nimport Models from './models'; \r\n\r\n@DesForm\r\n@observer\r\nexport default class extends React.Component<any, any> {\r\n    // 创建模型\r\n    models = Models.searchModels(this.props);\r\n    render() {\r\n        // item 的 props\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            defaultValues: toJS(Store.DataSource.searchParams)\r\n        }\r\n        return <DataViewSearch\r\n            // columnCount={4} 默认全局\r\n            // onReset={() => { }} 覆盖默认方法\r\n            // onSubmit={() => { }} 覆盖默认方法\r\n            Store={Store}\r\n            form={this.props.form}\r\n        >\r\n            {Models.renderModels(props)}\r\n        </DataViewSearch>\r\n    }\r\n}","import { ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { AgGrid } from 'components/dataView';\r\nimport { mergeLocales } from 'locale';\r\nimport React from 'react';\r\nimport Store from '../store';\r\nimport Action from './action';\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'frameworkgroup.GroupCode': '用户组编码',\r\n        'frameworkgroup.GroupName': '用户组名称',\r\n        'frameworkgroup.GroupRemark': '备注',\r\n    },\r\n    \"en-US\": {\r\n        'frameworkgroup.GroupCode': 'GroupCode',\r\n        'frameworkgroup.GroupName': 'GroupName',\r\n        'frameworkgroup.GroupRemark': 'Remark',\r\n    }\r\n});\r\n// 列配置\r\nconst columnDefs: (ColDef | ColGroupDef)[] = [\r\n    {\r\n        headerName: \"frameworkgroup.GroupCode\", field: \"GroupCode\"\r\n    },\r\n    {\r\n        headerName: \"frameworkgroup.GroupName\", field: \"GroupName\",\r\n    },\r\n    {\r\n        headerName: \"frameworkgroup.GroupRemark\", field: \"GroupRemark\",\r\n    },\r\n]\r\n/**\r\n * 表格\r\n */\r\nexport default class extends React.Component<any, any> {\r\n    render() {\r\n        return <AgGrid\r\n            // 页面状态 \r\n            Store={Store}\r\n            // 列配置\r\n            columnDefs={columnDefs}\r\n            // 行操作 \r\n            rowAction={Action.rowAction}\r\n        // 行操作 col props 同 columnDefs配置相同\r\n        // rowActionCol={{ headerName: \"操作\" }}\r\n        // frameworkComponents={{\r\n        // }}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { AuthorizeDecorator } from 'store/system/authorize';\r\nimport Store from './store';\r\nimport Action from './views/action';\r\nimport Other from './views/other';\r\nimport Search from './views/search';\r\nimport Table from './views/table';\r\n/**\r\n * 页面入口\r\n *  Action：页面动作\r\n *  Details：详情信息，添加，编辑，详情。\r\n *  Other：其他部件，导入导出\r\n *  Search：搜索参数\r\n *  Table：表格\r\n */\r\n@AuthorizeDecorator({ PageStore: Store })\r\nexport default class App extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n        <div className=\"app-page-frameworkgroup\" key=\"app-page-frameworkgroup\">\r\n        <Search {...this.props} />\r\n        <Action.pageAction {...this.props} />\r\n        <Table {...this.props} />\r\n        <Other {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * @author 冷 (https://github.com/LengYXin)\r\n * @email lengyingxin8966@gmail.com\r\n * @create date 2018-09-12 18:52:27\r\n * @modify date 2018-09-12 18:52:27\r\n * @desc [description] .\r\n */\r\nimport { message, notification, List, Col, Row, Button } from 'antd';\r\nimport globalConfig from 'global.config';\r\nimport lodash from 'lodash';\r\nimport { getLocalesValue } from 'locale';\r\nimport { BindAll } from 'lodash-decorators';\r\nimport { computed, observable, toJS, runInAction } from 'mobx';\r\nimport { map } from 'rxjs/operators';\r\nimport { Help } from 'utils/Help';\r\nimport { Request } from 'utils/Request';\r\nimport RequestFiles from 'utils/RequestFiles';\r\nimport React from 'react';\r\ndeclare type PageStoreOptions = {\r\n  /** api 列表 */\r\n  Apis: WTM.IUrls,\r\n  IdKey?: string,\r\n  Target?: string,\r\n};\r\n/**\r\n * 搜索 参数\r\n */\r\nexport declare type ISearchParams = {\r\n  /** 搜索条件 */\r\n  // search?: Object,\r\n  /** 排序 字符 */\r\n  SortInfo?: any,\r\n  /** 页码 */\r\n  Page?: number,\r\n  /** 条数 */\r\n  Limit?: number\r\n};\r\n@BindAll()\r\nexport default class PageStore {\r\n  public options: PageStoreOptions = {\r\n    Apis: {},\r\n    IdKey: \"ID\",\r\n    Target: globalConfig.target,\r\n  };\r\n  constructor(options: PageStoreOptions) {\r\n    this.options = { ...this.options, ...options };\r\n    this.Observable = new PageObservable(this, this.options);\r\n    this.DataSource = new DataSource(this, this.options);\r\n    this.PageState = new PageState(this, this.options);\r\n  }\r\n  /** 数据 */\r\n  DataSource: DataSource;\r\n  /** 状态 */\r\n  PageState: PageState;\r\n  /** 数据管道  */\r\n  Observable: PageObservable;// = new PageObservable(this, this.options);\r\n  /** 搜索 */\r\n  async onSearch(params?: ISearchParams) {\r\n    try {\r\n      // if (this.PageState.tableLoading) {\r\n      //   return\r\n      // }\r\n      this.PageState.tableLoading = true;\r\n      const res = await this.Observable.onSearch(params);\r\n      this.DataSource.tableList = res;\r\n      this.PageState.tableLoading = false;\r\n      return res;\r\n    } catch (error) {\r\n      // console.warn(error)\r\n      this.PageState.tableLoading = false;\r\n      throw error\r\n    }\r\n  }\r\n  /** 详情 */\r\n  async onDetails(params) {\r\n    const res = await this.Observable.onDetails(params);\r\n    this.DataSource.details = res;\r\n    return res;\r\n  }\r\n  /** 添加 */\r\n  async onInsert(params) {\r\n    const res = await this.Observable.onInsert(params);\r\n    notification.success({ message: getLocalesValue('tips.success.operation') });\r\n    this.onSearch();\r\n    return res;\r\n  }\r\n  /** 修改 */\r\n  async onUpdate(params) {\r\n    const res = await this.Observable.onUpdate(this.DataSource.details, params);\r\n    notification.success({ message: getLocalesValue('tips.success.operation') });\r\n    this.onSearch();\r\n    return res;\r\n  }\r\n  /**\r\n   * 删除\r\n   * @param params \r\n   */\r\n  async onDelete(params: string[]) {\r\n    this.PageState.tableLoading = true;\r\n    try {\r\n      if (!lodash.isArray(params)) {\r\n        if (lodash.isObject(params)) {\r\n          params = lodash.get(params, this.options.IdKey);\r\n        }\r\n        params = [params as any];\r\n      }\r\n      const res = await this.Observable.onDelete(params)\r\n      notification.success({ message: getLocalesValue('tips.success.operation') });\r\n      this.DataSource.selectedRowKeys = [];\r\n      // 刷新数据\r\n      this.onSearch(this.DataSource.searchParams);\r\n      return res\r\n    } catch (error) {\r\n      this.PageState.tableLoading = false;\r\n      notification.error({ message: getLocalesValue('tips.error.operation') });\r\n    }\r\n  }\r\n  /**\r\n   * 导入\r\n   * @param UploadFileId \r\n   */\r\n  async onImport(UploadFileId) {\r\n    try {\r\n      const res = await this.Observable.onImport(UploadFileId);\r\n      notification.success({ message: getLocalesValue('tips.success.operation') });\r\n      return res\r\n    } catch (error) {\r\n      this.onErrorMessage(getLocalesValue('tips.error.import'), [{ value: lodash.get(error, 'Form[\"Entity.Import\"]'), key: null, FileId: lodash.get(error, 'Form[\"Entity.ErrorFileId\"]') }])\r\n    }\r\n  }\r\n  /**\r\n   * 导出\r\n   * @param params 筛选参数\r\n   */\r\n  async onExport(params?) {\r\n    await RequestFiles.download({\r\n      ...this.options.Apis.export,\r\n      url: Request.compatibleUrl(this.options.Target, this.options.Apis.export.url),\r\n      body: { ...this.DataSource.searchParams, ...params }\r\n    })\r\n  }\r\n  /**\r\n   * 导出\r\n   * @param params 筛选参数\r\n   */\r\n  async onExportIds(ids = this.DataSource.selectedRowKeys) {\r\n    await RequestFiles.download({\r\n      ...this.options.Apis.exportIds,\r\n      url: Request.compatibleUrl(this.options.Target, this.options.Apis.exportIds.url),\r\n      body: ids\r\n    })\r\n  }\r\n  /**\r\n  * 数据模板\r\n  */\r\n  async onTemplate() {\r\n    await RequestFiles.download({\r\n      ...this.options.Apis.template,\r\n      url: Request.compatibleUrl(this.options.Target, this.options.Apis.template.url)\r\n    })\r\n  }\r\n  /**\r\n   * 错误提示\r\n   * @param message \r\n   * @param dataSource \r\n   */\r\n  onErrorMessage(message, dataSource?: { key: string, value: string, FileId?: string }[]) {\r\n    notification.error({\r\n      duration: 5,\r\n      message: message,\r\n      description: dataSource && dataSource.length > 0 && <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={dataSource}\r\n        renderItem={item => (\r\n          <List.Item>\r\n            <Row style={{ width: \"100%\" }}>\r\n              {/* <Col span={10}>{item.key}</Col> */}\r\n              <Col span={14}>{item.value}</Col>\r\n              {item.FileId && <Col span={10}>\r\n                <Button type=\"primary\" onClick={e => {\r\n                  RequestFiles.download({ url: RequestFiles.onFileDownload(item.FileId, \"/\"), method: \"get\" })\r\n                }}>{getLocalesValue('tips.error.file')}</Button>\r\n              </Col>}\r\n            </Row>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    })\r\n  }\r\n}\r\n/**\r\n * 页面数据管道\r\n */\r\nclass PageObservable {\r\n  constructor(private PageStore: PageStore, private options: PageStoreOptions) {\r\n  }\r\n  /**\r\n   * Ajax \r\n   */\r\n  Request = new Request(this.PageStore.options.Target);\r\n  /**\r\n   * 搜索\r\n   * @param params \r\n   */\r\n  onSearch(params): Promise<{ Count: number, Data: any[], Page: number, PageCount: number, Limit: number }> {\r\n    params = {\r\n      SortInfo: null,\r\n      Page: 1,\r\n      Limit: this.PageStore.DataSource.tableList.Limit,\r\n      ...this.PageStore.DataSource.searchParams,\r\n      ...params,\r\n    }\r\n    runInAction(() => {\r\n      this.PageStore.DataSource.searchParams = params;\r\n      this.PageStore.DataSource.tableList.Limit = params.Limit;\r\n    })\r\n    return this.Request.ajax({ ...this.options.Apis.search, body: params }).pipe(\r\n      map(data => {\r\n        if (data.Data) {\r\n          // 设置 一个 key 默认 去 idkey 中的值，没有则创建 一个 guid\r\n          data.Data = lodash.map(data.Data, obj => {\r\n            lodash.set(obj, 'key', lodash.get(obj, this.options.IdKey, Help.GUID()))\r\n            return obj\r\n          })\r\n        }\r\n        return {\r\n          Count: 0,\r\n          Data: [],\r\n          Page: 1,\r\n          PageCount: 1,\r\n          ...data,\r\n          Limit: params.Limit\r\n        }\r\n      })\r\n    ).toPromise();\r\n  };\r\n  /**\r\n   * 详情\r\n   * @param params \r\n   */\r\n  onDetails(params) {\r\n    //  字符串 为 ID 转换成 对象 匹配 /***/{ID} \r\n    if (lodash.isString(params)) {\r\n      params = lodash.set({}, this.options.IdKey, params);\r\n    }\r\n    return this.Request.ajax({ ...this.options.Apis.details, body: params }).toPromise();\r\n  };\r\n  /**\r\n   * 添加数据\r\n   * @param params 数据实体\r\n   */\r\n  onInsert(params) {\r\n    return this.Request.ajax({ ...this.options.Apis.insert, body: params }).toPromise();\r\n  };\r\n  /**\r\n   * 修改\r\n   * @param details \r\n   * @param params \r\n   */\r\n  onUpdate(details, params) {\r\n    // let isUpdate = false;\r\n    // lodash.map(params, (value, key) => {\r\n    //   if (!isUpdate) {\r\n    //     if (!lodash.isEqual(value, lodash.get(details, key))) {\r\n    //       isUpdate = true\r\n    //     }\r\n    //   }\r\n    // })\r\n    // if (isUpdate) {\r\n    return this.Request.ajax({ ...this.options.Apis.update, body: params }).toPromise();\r\n    // }\r\n    // return true\r\n  }\r\n  /**\r\n   * 删除\r\n   * @param ids \r\n   */\r\n  onDelete(ids) {\r\n    return this.Request.ajax({ ...this.options.Apis.delete, body: ids }).toPromise()\r\n  }\r\n  /**\r\n   * 导入\r\n   * @param UploadFileId \r\n   */\r\n  onImport(UploadFileId) {\r\n    return this.Request.ajax({ ...this.options.Apis.import, body: { UploadFileId } }).toPromise();\r\n  }\r\n}\r\n/**\r\n * 页面状态\r\n */\r\nclass PageState {\r\n  constructor(private PageStore: PageStore, private options: PageStoreOptions) {\r\n  }\r\n  @observable\r\n  private _tableLoading;\r\n  /**\r\n   * table 加载状态\r\n   */\r\n  @computed\r\n  public get tableLoading() {\r\n    return this._tableLoading;\r\n  }\r\n  public set tableLoading(value) {\r\n    this._tableLoading = value;\r\n  }\r\n  @observable\r\n  private _visiblePort;\r\n  /**\r\n   * 导入 visible\r\n   */\r\n  @computed\r\n  public get visiblePort() {\r\n    return this._visiblePort;\r\n  }\r\n  public set visiblePort(value) {\r\n    this._visiblePort = value;\r\n  }\r\n}\r\nclass DataSource {\r\n  constructor(private PageStore: PageStore, private options: PageStoreOptions) {\r\n  }\r\n  // 表格数据\r\n  @observable\r\n  private _tableList;\r\n  // 详情数据\r\n  @observable\r\n  private _details;\r\n  // 搜索参数\r\n  @observable\r\n  private _searchParams;\r\n  // 选择的行 数据\r\n  @observable\r\n  private _selectedRowData: any[];\r\n  @observable\r\n  private _selectedRowKeys: string[];\r\n  /**\r\n  * 表格数据\r\n  */\r\n  @computed\r\n  public get tableList(): {\r\n    Count: number,\r\n    Data: any[],\r\n    Limit: number,\r\n    Page: number,\r\n    PageCount: number\r\n  } {\r\n    return this._tableList || {\r\n      Count: 0,\r\n      Data: [],\r\n      Page: 1,\r\n      Limit: globalConfig.Limit,\r\n      PageCount: 1\r\n    };\r\n  }\r\n  public set tableList(value) {\r\n    this._tableList = value;\r\n  }\r\n  /**\r\n  * 详情\r\n  */\r\n  @computed\r\n  public get details() {\r\n    return this._details;\r\n  }\r\n  public set details(value) {\r\n    this._details = value;\r\n  }\r\n  /**\r\n   * 搜索参数\r\n   */\r\n  @computed\r\n  public get searchParams() {\r\n    return this._searchParams;\r\n  };\r\n  public set searchParams(value) {\r\n    this._searchParams = value;\r\n  };\r\n  /**\r\n   * 选择的 行 数据\r\n   */\r\n  @computed\r\n  public get selectedRowData() {\r\n    return toJS(this._selectedRowData) || [];\r\n  }\r\n  /**\r\n  * 选择的 行 数据 keys\r\n  */\r\n  @computed\r\n  public get selectedRowKeys() {\r\n    return toJS(this._selectedRowKeys) || [];\r\n  }\r\n  public set selectedRowKeys(value) {\r\n    this._selectedRowKeys = value;\r\n    this._selectedRowData = lodash.filter(this._tableList, item => lodash.includes(value, lodash.get(item, this.options.IdKey)));\r\n  }\r\n}\r\n"],"sourceRoot":""}