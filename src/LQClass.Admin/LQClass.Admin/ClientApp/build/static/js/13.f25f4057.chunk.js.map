{"version":3,"sources":["pages/dataprivilege/store/index.ts","pages/dataprivilege/views/models.tsx","pages/dataprivilege/views/forms.tsx","pages/dataprivilege/views/action.tsx","pages/dataprivilege/views/other.tsx","pages/dataprivilege/views/search.tsx","pages/dataprivilege/views/table.tsx","pages/dataprivilege/index.tsx"],"names":["BindAll","Apis","search","url","method","details","insert","update","delete","import","export","exportIds","template","DataSource","searchParams","DpType","params","this","Observable","Request","ajax","options","body","headers","toPromise","res","PageState","tableLoading","onDelete","ModelName","TableName","Type","Id","TargetId","notification","success","message","getLocalesValue","selectedRowKeys","onSearch","error","mergeLocales","props","label","id","rules","values","txt","formItem","dataSource","Text","Value","placeholder","cache","mode","linkage","table","models","value","key","fieId","defaultvalue","undefined","rv","form","getFieldValue","defaultValues","InsertForm","DialogFormDes","onFormSubmit","Store","onInsert","observer","Models","Isgroup","Isall","layout","span","disabled","React","UpdateForm","onUpdate","onLoadData","onDetails","getFieldDecorator","initialValue","InfoForm","display","hidden","ActionEvents","onImport","visiblePort","onExport","onExportIds","data","onDeleteList","length","confirm","title","getLocalesTemplate","text","onOk","a","onCancel","pageAction","DesError","deletelength","className","visible","onAuthorizeActions","icon","type","loadData","onClick","overlay","Item","rowAction","showSubmit","onConfirm","DesForm","toJS","columnDefs","headerName","field","Action","Component","App","AuthorizeDecorator","PageStore"],"mappings":"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","file":"static/js/13.f25f4057.chunk.js","sourcesContent":["import { BindAll } from 'lodash-decorators';\r\nimport DataSource from 'store/dataSource';\r\nimport { notification } from 'antd';\r\nimport { url } from 'inspector';\r\nimport { getLocalesValue } from 'locale';\r\n@BindAll()\r\nexport class Store extends DataSource {\r\n    constructor() {\r\n        super({\r\n            // IdKey: \"ID\", 默认 ID\r\n            // Target: \"/api\", 默认 /api\r\n            Apis: {\r\n                search: {\r\n                    url: \"/_dataprivilege/search\",\r\n                    method: \"post\"\r\n                },\r\n                details: {\r\n                    // 支持 嵌套 参数 /user/{ID}/{AAA}/{BBB}\r\n                    url: \"/_dataprivilege/get\",\r\n                    method: \"get\"\r\n                },\r\n                insert: {\r\n                    url: \"/_dataprivilege/add\",\r\n                    method: \"post\"\r\n                },\r\n                update: {\r\n                    url: \"/_dataprivilege/edit\",\r\n                    method: \"put\"\r\n                },\r\n                delete: {\r\n                    url: \"/_dataprivilege/Delete\",\r\n                    method: \"post\"\r\n                },\r\n                import: {\r\n                    url: \"/_dataprivilege/import\",\r\n                    method: \"post\"\r\n                },\r\n                export: {\r\n                    url: \"/_dataprivilege/ExportExcel\",\r\n                    method: \"post\"\r\n                },\r\n                exportIds: {\r\n                    url: \"/_dataprivilege/ExportExcelByIds\",\r\n                    method: \"post\"\r\n                },\r\n                template: {\r\n                    url: \"/_dataprivilege/GetExcelTemplate\",\r\n                    method: \"get\"\r\n                }\r\n            }\r\n        });\r\n        this.DataSource.searchParams = { DpType: '0' }\r\n    }\r\n\r\n    /** 修改 */\r\n    async onDetails(params) {\r\n        console.log(params);\r\n        const res = await this.Observable.Request.ajax({ ...this.options.Apis.details, body: params, headers: { 'Content-Type': null } }).toPromise();\r\n        return res;\r\n    }\r\n    /**\r\n       * 删除\r\n       * @param params \r\n       */\r\n    async onDelete(params) {\r\n        this.PageState.tableLoading = true;\r\n        try {\r\n            const res = await this.Observable.onDelete({ ModelName: params.TableName, Type: params.DpType, Id: params.TargetId })\r\n            notification.success({ message: getLocalesValue('tips.success.operation') });\r\n            this.DataSource.selectedRowKeys = [];\r\n            // 刷新数据\r\n            this.onSearch(this.DataSource.searchParams);\r\n            return res\r\n        } catch (error) {\r\n            this.PageState.tableLoading = false;\r\n            notification.error({ message: getLocalesValue('tips.error.operation') });\r\n        }\r\n    }\r\n}\r\nexport default new Store();\r\n","import { Input, Switch, Icon, Select, Upload, message, Modal, InputNumber } from 'antd';\r\nimport { WtmCascader, WtmCheckbox, WtmDatePicker, WtmEditor, WtmRadio, WtmSelect, WtmTransfer, WtmUploadImg, WtmUpload } from 'components/form';\r\nimport { FormItem } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport lodash from 'lodash';\r\nimport Regular from 'utils/Regular';\r\nimport Request from 'utils/Request';\r\nimport { mergeLocales, getLocalesValue } from 'locale';\r\nimport { FormattedMessage } from 'react-intl';\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'dataprivilege.required': '{txt}是必填项',\r\n        'dataprivilege.placeholder': '请选择 {zhText}',\r\n        'dataprivilege.DpType': '权限类型',\r\n        'dataprivilege.DpType.dataSource.0': '用户组权限',\r\n        'dataprivilege.DpType.dataSource.1': '用户权限',\r\n        'dataprivilege.TableName': '权限名称',\r\n        'dataprivilege.SelectedItemsID': '允许访问',\r\n        'dataprivilege.IsAll': '全部权限',\r\n        'dataprivilege.IsAll.true': '是',\r\n        'dataprivilege.IsAll.false': '否',\r\n        'dataprivilege.UserItCode': '用户Id',\r\n        'dataprivilege.GroupId': '用户组',\r\n    },\r\n    \"en-US\": {\r\n        'dataprivilege.required': `{enText} it's required`,\r\n        'dataprivilege.placeholder': 'Please choose {enText}',\r\n        'dataprivilege.DpType': 'DpType',\r\n        'dataprivilege.DpType.dataSource.0': 'User group permissions',\r\n        'dataprivilege.DpType.dataSource.1': 'User permissions',\r\n        'dataprivilege.TableName': 'TableName',\r\n        'dataprivilege.SelectedItemsID': 'Allow access to',\r\n        'dataprivilege.IsAll': 'All permissions',\r\n        'dataprivilege.IsAll.true': 'true',\r\n        'dataprivilege.IsAll.false': 'false',\r\n        'dataprivilege.UserItCode': 'UserItCode',\r\n        'dataprivilege.GroupId': 'User Group',\r\n    }\r\n});\r\n/**\r\n * label  标识\r\n * rules   校验规则，参考下方文档  https://ant.design/components/form-cn/#components-form-demo-validate-other\r\n * formItem  表单组件\r\n */\r\nexport default {\r\n    /**\r\n     * 表单模型 \r\n     * @param props \r\n     */\r\n    editModels(props?): WTM.FormItem {\r\n        return {\r\n            /** 权限类型 */\r\n            \"DpType\": {\r\n                label: <FormattedMessage id='dataprivilege.DpType' />,\r\n                rules: [{\r\n                    \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('dataprivilege.DpType')}}/> }],\r\n                formItem: <WtmRadio\r\n                    dataSource={[\r\n                        { Text: <FormattedMessage id='dataprivilege.DpType.dataSource.0' />, Value: 'UserGroup' },\r\n                        { Text: <FormattedMessage id='dataprivilege.DpType.dataSource.1' />, Value: 'User' },\r\n                    ]} />\r\n            },\r\n            /** 权限名称 */\r\n            \"Entity.TableName\": {\r\n                label: <FormattedMessage id='dataprivilege.TableName' />,\r\n                rules: [{ \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('dataprivilege.TableName') }} /> }],\r\n                formItem: <WtmSelect placeholder={<FormattedMessage id='tips.placeholder.choose' values={{ txt: getLocalesValue('dataprivilege.TableName') }} />}\r\n                    dataSource={Request.cache({ url: \"/api/_DataPrivilege/GetPrivileges\" })}\r\n                />\r\n            },\r\n            /** 允许访问 */\r\n            \"SelectedItemsID\": {\r\n                label: <FormattedMessage id='dataprivilege.SelectedItemsID' />,\r\n                rules: [],\r\n                formItem: <WtmSelect placeholder={<FormattedMessage id='tips.placeholder.choose' values={{ txt: getLocalesValue('dataprivilege.SelectedItemsID') }} />}\r\n                    mode=\"multiple\"\r\n                    linkage={['Entity.TableName']}\r\n                    dataSource={(props) => {\r\n                        const table = lodash.get(props, 'Entity.TableName')\r\n                        return table && Request.cache({\r\n                            url: \"/api/_DataPrivilege/GetPrivilegeByTableName\", body: { table }\r\n                        })\r\n                    }}\r\n                />\r\n            },\r\n            /** 备注 */\r\n            \"IsAll\": {\r\n                label: <FormattedMessage id='dataprivilege.IsAll' />,\r\n                rules: [{ \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('dataprivilege.IsAll') }} /> }],\r\n                formItem: <WtmSelect\r\n                    dataSource={[\r\n                        { Text: <FormattedMessage id='tips.bool.true' />, Value: true},\r\n                        { Text: <FormattedMessage id='tips.bool.false' />, Value: false },\r\n                    ]} />\r\n            },\r\n            /** 用户Id */\r\n            \"Entity.UserCode\": {\r\n                label: <FormattedMessage id='dataprivilege.UserItCode' />,\r\n                rules: [{ \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('dataprivilege.UserItCode') }} /> }],\r\n                formItem: <Input placeholder=\"\" />\r\n            },\r\n            /** 用户组 */\r\n            \"Entity.GroupCode\": {\r\n                label: <FormattedMessage id='dataprivilege.GroupId' />,\r\n                rules: [{ \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('dataprivilege.GroupId') }} /> }],\r\n                formItem: <WtmSelect placeholder={<FormattedMessage id='tips.placeholder.choose' values={{ txt: getLocalesValue('dataprivilege.GroupId') }}/>}\r\n                    dataSource={Request.cache({ url: \"/api/_DataPrivilege/GetUserGroups\" })}\r\n                />\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 搜索 模型 \r\n     * @param props \r\n     */\r\n    searchModels(props?): WTM.FormItem {\r\n        return {\r\n            /** 权限名称 */\r\n            \"TableName\": {\r\n                label: <FormattedMessage id='dataprivilege.TableName' />,\r\n                rules: [],\r\n                formItem: <WtmSelect placeholder=\"\"\r\n                    dataSource={Request.cache({ url: \"/api/_DataPrivilege/GetPrivileges\" })}\r\n                />\r\n            },\r\n            /** 权限类型 */\r\n            \"DpType\": {\r\n                label: <FormattedMessage id='dataprivilege.DpType' />,\r\n                rules: [],\r\n                formItem: <WtmRadio\r\n                    dataSource={[\r\n                        { Text: <FormattedMessage id='dataprivilege.DpType.dataSource.0' />, Value: '0' },\r\n                        { Text: <FormattedMessage id='dataprivilege.DpType.dataSource.1' />, Value: '1' },\r\n                    ]} />\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 渲染 模型\r\n     */\r\n    renderModels(props?) {\r\n        return lodash.map(props.models, (value, key) => {\r\n            return <FormItem {...props} fieId={key} key={key} />\r\n        })\r\n    },\r\n\r\n    getValue(props: WTM.FormProps, fieId, defaultvalue = undefined) {\r\n        var rv = lodash.toString(props.form.getFieldValue(fieId) || lodash.get(props.defaultValues, fieId));\r\n        console.log(\"rv=\" + rv);\r\n        if (rv == \"\") {\r\n            rv = lodash.toString(defaultvalue);\r\n        }\r\n        return rv;\r\n    }\r\n}\r\n","import { Col } from 'antd';\r\nimport { DialogFormDes, FormItem, InfoShellLayout } from 'components/dataView';\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store'; //页面状态\r\nimport Models from './models'; //模型\r\n\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        return Store.onInsert(values)\r\n    }\r\n})\r\n@observer\r\nexport class InsertForm extends React.Component<any, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n        }\r\n        const Isgroup = Models.getValue(props, \"DpType\", \"UserGroup\") == \"UserGroup\"\r\n        const Isall = Models.getValue(props, \"IsAll\", true) == \"true\"\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"DpType\" layout=\"row\" value='UserGroup' />\r\n            {(!Isgroup)&& <FormItem {...props} fieId=\"Entity.UserCode\"  />}\r\n            {(Isgroup)&& <FormItem {...props} fieId=\"Entity.GroupCode\" />}\r\n            <Col span={24}></Col>\r\n            <FormItem {...props} fieId=\"Entity.TableName\" />\r\n            <FormItem {...props} fieId=\"IsAll\" value={true} />\r\n            <FormItem {...props} fieId=\"SelectedItemsID\" disabled={Isall} />\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 修改表单\r\n */\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        return Store.onUpdate(values)\r\n    },\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class UpdateForm extends React.Component<WTM.FormProps, any> {\r\n    // 创建模型\r\n    models = Models.editModels(this.props);\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        const { form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n        }\r\n       // lodash.update(props, 'defaultValues.IsAll', value => String(value));\r\n        //lodash.update(props, 'defaultValues.DpType', value => String(value));\r\n        getFieldDecorator('Entity.ID', { initialValue: lodash.get(this.props.defaultValues, 'Entity.ID') })\r\n        const Isgroup = Models.getValue(props, \"DpType\") == \"UserGroup\"\r\n        const Isall = Models.getValue(props, \"IsAll\") == \"true\"\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"DpType\" layout=\"row\" />\r\n            {(!Isgroup)&& <FormItem {...props} fieId=\"Entity.UserCode\"  />}\r\n            {(Isgroup)&& <FormItem {...props} fieId=\"Entity.GroupCode\" />}\r\n            <Col span={24}></Col>\r\n            <FormItem {...props} fieId=\"Entity.TableName\" />\r\n            <FormItem {...props} fieId=\"IsAll\" />\r\n            <FormItem {...props} fieId=\"SelectedItemsID\" disabled={Isall} />\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 详情\r\n */\r\n@DialogFormDes({\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class InfoForm extends React.Component<WTM.FormProps, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            display: true,\r\n        }\r\n        const Isgroup = Models.getValue(props, \"DpType\") == \"UserGroup\"\r\n        const Isall = Models.getValue(props, \"IsAll\") == \"true\"\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"DpType\" layout=\"row\" />\r\n            <FormItem {...props} fieId=\"Entity.UserCode\" hidden={Isgroup} />\r\n            <FormItem {...props} fieId=\"Entity.GroupCode\" hidden={!Isgroup} />\r\n            <Col span={24}></Col>\r\n            <FormItem {...props} fieId=\"Entity.TableName\" />\r\n            <FormItem {...props} fieId=\"IsAll\" />\r\n            <FormItem {...props} fieId=\"SelectedActionIDs\" disabled={Isall} />\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n","import { Button, Divider, Dropdown, Menu, Modal, Popconfirm, Row } from 'antd';\r\nimport { DialogForm, Visible } from 'components/dataView';\r\nimport { DesError } from 'components/decorators';\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { onAuthorizeActions } from 'store/system/authorize';\r\nimport Store from '../store';\r\nimport { InfoForm, InsertForm, UpdateForm } from './forms';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { getLocalesTemplate } from 'locale';\r\n/**\r\n * 动作事件\r\n */\r\nexport const ActionEvents = {\r\n    /**\r\n     * 导入\r\n     */\r\n    onImport() {\r\n        Store.PageState.visiblePort = true;\r\n    },\r\n    /**\r\n     * 导出\r\n     */\r\n    onExport() {\r\n        Store.onExport()\r\n    },\r\n    /**\r\n     * 批量导出\r\n     */\r\n    onExportIds() {\r\n        Store.onExportIds()\r\n    },\r\n    /**\r\n     * 删除\r\n     * @param data \r\n     */\r\n    onDelete(data) {\r\n        Store.onDelete(data)\r\n    },\r\n    /**\r\n    * 删除\r\n    */\r\n    onDeleteList() {\r\n        const length = Store.DataSource.selectedRowKeys.length\r\n        Modal.confirm({\r\n            title: getLocalesTemplate('action.deleteConfirm', { text: length }),\r\n            onOk: async () => {\r\n                Store.onDelete(Store.DataSource.selectedRowKeys)\r\n            },\r\n            onCancel() { },\r\n        });\r\n    },\r\n}\r\n/**\r\n * 表格 所有 动作\r\n */\r\n@DesError\r\n@observer\r\nclass PageAction extends React.Component<any, any> {\r\n    render() {\r\n        const { selectedRowKeys } = Store.DataSource;\r\n        const deletelength = selectedRowKeys.length;\r\n        const disabled = deletelength < 1;\r\n        return (\r\n            <Row className=\"data-view-page-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"insert\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.insert\" />}\r\n                        icon=\"plus\"\r\n                    >\r\n                        <InsertForm />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"update\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.update\" />}\r\n                        icon=\"edit\"\r\n                        disabled={deletelength != 1}\r\n                    >\r\n                        <UpdateForm loadData={() => (lodash.find(selectedRowKeys))} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                {/* <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button icon=\"delete\" onClick={ActionEvents.onDeleteList} disabled={disabled}><FormattedMessage id=\"action.delete\" /></Button>\r\n                </Visible> */}\r\n                <Visible visible={onAuthorizeActions(Store, \"import\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button icon=\"folder-add\" onClick={ActionEvents.onImport}><FormattedMessage id=\"action.import\" /></Button>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"export\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Dropdown overlay={<Menu>\r\n                        <Menu.Item>\r\n                            <a onClick={ActionEvents.onExport}><FormattedMessage id=\"action.exportAll\" /></a>\r\n                        </Menu.Item>\r\n                        <Menu.Item disabled={disabled}>\r\n                            <a onClick={ActionEvents.onExportIds}><FormattedMessage id=\"action.exportSelect\" /></a>\r\n                        </Menu.Item>\r\n                    </Menu>}>\r\n                        <Button icon=\"download\" ><FormattedMessage id=\"action.export\" /></Button>\r\n                    </Dropdown>\r\n                </Visible>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n/**\r\n * 表格 行 动作\r\n */\r\n@DesError\r\n@observer\r\nclass RowAction extends React.Component<{\r\n    /** 数据详情 */\r\n    data: any;\r\n    [key: string]: any;\r\n}, any> {\r\n    render() {\r\n        const { data } = this.props\r\n        return (\r\n            <Row className=\"data-view-row-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"details\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.info\" />}\r\n                        showSubmit={false}\r\n                        type=\"a\"\r\n                    >\r\n                        <InfoForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"update\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.update\" />}\r\n                        type=\"a\"\r\n                    >\r\n                        <UpdateForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Popconfirm title={<FormattedMessage id=\"action.deleteConfirm\" values={{ text: '' }} />} onConfirm={() => { ActionEvents.onDelete(data) }} >\r\n                        <a ><FormattedMessage id=\"action.delete\" /></a>\r\n                    </Popconfirm>\r\n                </Visible>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default {\r\n    /**\r\n     * 页面动作\r\n     */\r\n    pageAction: PageAction,\r\n    /**\r\n     * 数据行动作\r\n     */\r\n    rowAction: RowAction\r\n}","import { ImportModal } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\n\r\n/**\r\n * 其他弹框类组件\r\n */\r\nexport default class extends React.Component<any, any>{\r\n    shouldComponentUpdate() {\r\n        return false\r\n    }\r\n    render() {\r\n        return <React.Fragment key=\"page-other\">\r\n            <ImportModal Store={Store} />\r\n        </React.Fragment>\r\n    }\r\n}","import { FormItem } from 'components/dataView';\r\nimport { DataViewSearch } from 'components/dataView/header/search';\r\nimport { DesForm } from 'components/decorators';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\nimport Models from './models'; \r\n\r\n@DesForm\r\n@observer\r\nexport default class extends React.Component<any, any> {\r\n    // 创建模型\r\n    models = Models.searchModels(this.props);\r\n    render() {\r\n        // item 的 props\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            defaultValues: toJS(Store.DataSource.searchParams)\r\n        }\r\n        return <DataViewSearch\r\n            // columnCount={4} 默认全局\r\n            // onReset={() => { }} 覆盖默认方法\r\n            // onSubmit={() => { }} 覆盖默认方法\r\n            Store={Store}\r\n            form={this.props.form}\r\n        >\r\n            {Models.renderModels(props)}\r\n        </DataViewSearch>\r\n    }\r\n}","import { ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { AgGrid } from 'components/dataView';\r\nimport { mergeLocales } from 'locale';\r\nimport React from 'react';\r\nimport Store from '../store';\r\nimport Action from './action';\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'dataprivilege.Name': '授权对象',\r\n        'dataprivilege.TableName': '权限名称',\r\n        'dataprivilege.RelateIDs': '权限',\r\n    },\r\n    \"en-US\": {\r\n        'dataprivilege.Name': 'Name',\r\n        'dataprivilege.TableName': 'TableName',\r\n        'dataprivilege.RelateIDs': 'Privileges',\r\n    }\r\n});\r\n// 列配置\r\nconst columnDefs: (ColDef | ColGroupDef)[] = [\r\n    {\r\n        headerName: \"dataprivilege.Name\", field: \"Name\"\r\n    },\r\n    {\r\n        headerName: \"dataprivilege.TableName\", field: \"PName\",\r\n    },\r\n    {\r\n        headerName: \"dataprivilege.RelateIDs\", field: \"RelateIDs\",\r\n    },\r\n]\r\n/**\r\n * 表格\r\n */\r\nexport default class extends React.Component<any, any> {\r\n    render() {\r\n        return <AgGrid\r\n            // 页面状态 \r\n            Store={Store}\r\n            // 列配置\r\n            columnDefs={columnDefs}\r\n            // 行操作 \r\n            rowAction={Action.rowAction}\r\n            // 行操作 col props 同 columnDefs配置相同\r\n            // rowActionCol={{ headerName: \"操作\" }}\r\n            // frameworkComponents={{\r\n            // }}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { AuthorizeDecorator } from 'store/system/authorize';\r\nimport Store from './store';\r\nimport Action from './views/action';\r\nimport Other from './views/other';\r\nimport Search from './views/search';\r\nimport Table from './views/table';\r\n/**\r\n * 页面入口\r\n *  Action：页面动作\r\n *  Details：详情信息，添加，编辑，详情。\r\n *  Other：其他部件，导入导出\r\n *  Search：搜索参数\r\n *  Table：表格\r\n */\r\n@AuthorizeDecorator({ PageStore: Store })\r\nexport default class App extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n        <div className=\"app-page-dataprivilege\" key=\"app-page-dataprivilege\">\r\n        <Search {...this.props} />\r\n        <Action.pageAction {...this.props} />\r\n        <Table {...this.props} />\r\n        <Other {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}