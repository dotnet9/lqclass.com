{"version":3,"sources":["../node_modules/lodash/capitalize.js","../node_modules/lodash/upperFirst.js","../node_modules/lodash/_createCaseFirst.js","components/dataView/content/localeText .ts","components/dataView/content/gridCommunity.tsx"],"names":["toString","upperFirst","module","exports","string","toLowerCase","createCaseFirst","castSlice","hasUnicode","stringToArray","methodName","strSymbols","undefined","chr","charAt","trailing","join","slice","page","more","to","of","next","last","first","previous","loadingOoo","selectAll","searchOoo","blanks","filterOoo","applyFilter","equals","notEquals","lessThan","greaterThan","lessThanOrEqual","greaterThanOrEqual","inRange","contains","notContains","startsWith","endsWith","andCondition","orCondition","group","columns","filters","rowGroupColumns","rowGroupColumnsEmptyMessage","valueColumns","pivotMode","groups","values","pivots","valueColumnsEmptyMessage","pivotColumnsEmptyMessage","toolPanelButton","noRowsToShow","pinColumn","valueAggregation","autosizeThiscolumn","autosizeAllColumns","groupBy","ungroupBy","resetColumns","expandAll","collapseAll","toolPanel","export","csvExport","excelExport","excelXmlExport","chartRange","columnRangeChart","groupedColumnChart","stackedColumnChart","normalizedColumnChart","barRangeChart","groupedBarChart","stackedBarChart","normalizedBarChart","lineRangeChart","pieRangeChart","pieChart","doughnutChart","areaRangeChart","areaChart","stackedAreaChart","normalizedAreaChart","pinLeft","pinRight","noPin","sum","min","max","none","count","average","filteredRows","selectedRows","totalRows","totalAndFilteredRows","copy","copyWithHeaders","ctrlC","paste","ctrlV","settings","data","format","categories","series","axis","color","thickness","xRotation","yRotation","ticks","width","length","padding","chart","title","font","top","right","bottom","left","labels","size","legend","position","markerSize","markerStroke","markerPadding","itemPaddingX","itemPaddingY","strokeWidth","offset","tooltips","offsets","callout","markers","shadow","blur","xOffset","yOffset","lineWidth","normal","bold","italic","boldItalic","fillOpacity","strokeOpacity","groupedColumnTooltip","stackedColumnTooltip","normalizedColumnTooltip","groupedBarTooltip","stackedBarTooltip","normalizedBarTooltip","pieTooltip","doughnutTooltip","lineTooltip","groupedAreaTooltip","stackedAreaTooltip","normalizedAreaTooltip","LicenseManager","setLicenseKey","frameworkRender","columnsRenderImg","props","value","columnsRenderBoolean","checkedChildren","type","unCheckedChildren","disabled","defaultChecked","columnsRenderDownload","style","textAlign","height","objectFit","shape","icon","onClick","e","window","open","RequestFiles","onFileDownload","columnsRenderDefault","render","Regular","isHtml","test","dangerouslySetInnerHTML","__html","GridCommunity","BindAll","Debounce","observer","gridApi","refTableBody","React","resizeEvent","minHeight","state","sortable","this","refTable","current","innerHeight","offsetTop","globalConfig","tabsPage","api","sizeColumnsToFit","setState","error","pageSize","Store","onSearch","Page","Limit","event","SortModel","getSortModel","SortInfo","sort","Direction","Property","colId","DataSource","searchParams","selectedRowKeys","getSelectedRows","onUpdateHeight","fromEvent","pipe","debounceTime","subscribe","autoSizeAll","setSelected","columnApi","autoSizeColumns","forEachNode","rowNode","unsubscribe","RowAction","rowAction","rowActionCol","paginationProps","theme","agGridTheme","className","onGridReady","children","loading","defaultColDef","columnDefs","checkboxSelection","frameworkComponents","PageState","language","dataSource","tableList","checkboxSelectionWidth","rowData","toJS","Data","treeData","rowGroupPanelShow","unshift","rowDrag","dndSource","lockPosition","suppressMenu","suppressSizeToFit","suppressMovable","suppressNavigable","suppressCellFlash","enableRowGroup","enablePivot","enableValue","suppressResize","editable","suppressColumnsToolPanel","suppressAutoSize","filter","resizable","headerCheckboxSelection","maxWidth","minWidth","pinned","push","headerName","field","cellRenderer","menuTabs","map","colDefMap","col","cellStyle","colDef","backgroundColor","getLocalesValue","key","PVmessages","getLocales","ref","spinning","tableLoading","indicator","spin","localeText","suppressNoRowsOverlay","suppressLoadingOverlay","enableRangeSelection","animateRows","rowSelection","sideBar","toolPanels","id","labelDefault","labelKey","iconKey","toolPanelParams","suppressValues","suppressPivots","suppressPivotMode","rowProps","locale","messages","autoGroupColumnDef","onColumnRowGroupChanged","onSelectionChanged","onSortChanged","onRowDataChanged","showSizeChanger","showQuickJumper","pageSizeOptions","total","Count","onChange","onChangePagination","onShowSizeChange","columnsRender","text","record","__style","fileID"],"mappings":"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","file":"static/js/8.2dd88590.chunk.js","sourcesContent":["var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\n\n\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;","var createCaseFirst = require('./_createCaseFirst');\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\n\n\nvar upperFirst = createCaseFirst('toUpperCase');\nmodule.exports = upperFirst;","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\n\n\nfunction createCaseFirst(methodName) {\n  return function (string) {\n    string = toString(string);\n    var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;\n    var chr = strSymbols ? strSymbols[0] : string.charAt(0);\n    var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;","export default {\r\n    // for filter panel\r\n    page: '页',\r\n    more: '更多',\r\n    to: '到',\r\n    of: '从',\r\n    next: '下一个',\r\n    last: '最后一个',\r\n    first: '第一个',\r\n    previous: '前一个',\r\n    loadingOoo: '加载中...',\r\n\r\n    // for set filter\r\n    selectAll: '全选',\r\n    searchOoo: '搜索...',\r\n    blanks: '空',\r\n\r\n    // for number filter and text filter\r\n    filterOoo: '过滤...',\r\n    applyFilter: '应用过滤...',\r\n    equals: '等于',\r\n    notEquals: '不等于',\r\n\r\n    // for number filter\r\n    lessThan: '小于',\r\n    greaterThan: '大于',\r\n    lessThanOrEqual: '小于等于',\r\n    greaterThanOrEqual: '大于等于',\r\n    inRange: '范围',\r\n\r\n    // for text filter\r\n    contains: '包含',\r\n    notContains: '不包含',\r\n    startsWith: '开始于',\r\n    endsWith: '结束于',\r\n\r\n    // filter conditions\r\n    andCondition: '与',\r\n    orCondition: '或',\r\n\r\n    // the header of the default group column\r\n    group: '组',\r\n\r\n    // tool panel\r\n    columns: '列',\r\n    filters: '过滤',\r\n    rowGroupColumns: '分组列',\r\n    rowGroupColumnsEmptyMessage: '拖拽 分组',//'la drag cols to group',\r\n    valueColumns: '值列',\r\n    pivotMode: '透视',\r\n    groups: '组',\r\n    values: '值',\r\n    pivots: '透视',\r\n    valueColumnsEmptyMessage: '没有值列',\r\n    pivotColumnsEmptyMessage: '没有透视列',\r\n    toolPanelButton: '工具按钮',\r\n\r\n    // other\r\n    noRowsToShow: '没有数据',\r\n\r\n    // enterprise menu\r\n    pinColumn: '钉住列',\r\n    valueAggregation: '值聚合',\r\n    autosizeThiscolumn: '自动列宽',\r\n    autosizeAllColumns: '自动所有列宽',\r\n    groupBy: '分组',\r\n    ungroupBy: '取消分组',\r\n    resetColumns: '重置列',\r\n    expandAll: '展开全部',\r\n    collapseAll: '收起全部',\r\n    toolPanel: '工具面板',\r\n    export: '导出',\r\n    csvExport: '导出csv',\r\n    excelExport: '导出excel',\r\n    excelXmlExport: '导出xml',\r\n\r\n    // enterprise menu (charts)\r\n    chartRange: '图表范围',\r\n\r\n    columnRangeChart: '范围图',\r\n    groupedColumnChart: '分组图',\r\n    stackedColumnChart: '堆栈图',\r\n    normalizedColumnChart: '标准化图',\r\n\r\n    barRangeChart: '柱状图',\r\n    groupedBarChart: '分组柱图',\r\n    stackedBarChart: '堆栈柱图',\r\n    normalizedBarChart: '标准化柱图',\r\n\r\n    lineRangeChart: '线图',\r\n\r\n    pieRangeChart: '范围饼图',\r\n    pieChart: '饼图',\r\n    doughnutChart: '环形图',\r\n\r\n    areaRangeChart: '范围区域图',\r\n    areaChart: '区域图',\r\n    stackedAreaChart: '堆栈区域图',\r\n    normalizedAreaChart: '堆栈标准化图',\r\n\r\n    // enterprise menu pinning\r\n    pinLeft: '钉到左侧 <<',\r\n    pinRight: '钉到右侧 >>',\r\n    noPin: '取消钉住 <>',\r\n\r\n    // enterprise menu aggregation and status bar\r\n    sum: '合计',\r\n    min: '最小',\r\n    max: '最大',\r\n    none: '无',\r\n    count: '数量',\r\n    average: '平均',\r\n    filteredRows: '过滤行',\r\n    selectedRows: '选择行',\r\n    totalRows: '总行数',\r\n    totalAndFilteredRows: '行',\r\n\r\n    // standard menu\r\n    copy: '复制',\r\n    copyWithHeaders: '带表头复制',\r\n    ctrlC: 'ctrl n C',\r\n    paste: '粘贴',\r\n    ctrlV: 'ctrl n V',\r\n\r\n    // charts\r\n    settings: '设置',\r\n    data: '数据',\r\n    format: '格式',\r\n    categories: '种类',\r\n    series: '系列',\r\n    axis: '轴',\r\n    color: '颜色',\r\n    thickness: '厚度',\r\n    xRotation: '水平旋转',\r\n    yRotation: '竖直旋转',\r\n    ticks: '勾选',\r\n    width: '宽',\r\n    length: '长度',\r\n    padding: '填充',\r\n    chart: '图表',\r\n    title: '标题',\r\n    font: '字体',\r\n    top: '上',\r\n    right: '右',\r\n    bottom: '下',\r\n    left: '左',\r\n    labels: '标签',\r\n    size: '尺寸',\r\n    legend: '图例',\r\n    position: '位置',\r\n    markerSize: '标签尺寸',\r\n    markerStroke: '标签画笔',\r\n    markerPadding: '标签填充',\r\n    itemPaddingX: '项目水平填充',\r\n    itemPaddingY: '项目竖直填充',\r\n    strokeWidth: '画',\r\n    offset: '位移',\r\n    tooltips: '工具提示',\r\n    offsets: '位移',\r\n    callout: '编号',\r\n    markers: '标签',\r\n    shadow: '阴影',\r\n    blur: '虚化',\r\n    xOffset: '水平位移',\r\n    yOffset: '竖直位移',\r\n    lineWidth: '线宽',\r\n    normal: '标准',\r\n    bold: '粗体',\r\n    italic: '斜体',\r\n    boldItalic: '粗斜体',\r\n    fillOpacity: '填充不透明度',\r\n    strokeOpacity: '画笔不透明度',\r\n    groupedColumnTooltip: '组提示',\r\n    stackedColumnTooltip: '堆叠提示',\r\n    normalizedColumnTooltip: '标准化提示',\r\n    groupedBarTooltip: '分组柱状提示',\r\n    stackedBarTooltip: '堆叠柱状提示',\r\n    normalizedBarTooltip: '标准化柱状提示',\r\n    pieTooltip: '饼图提示',\r\n    doughnutTooltip: '环形提示',\r\n    lineTooltip: '线提示',\r\n    groupedAreaTooltip: '分组区域提示',\r\n    stackedAreaTooltip: '堆叠区域提示',\r\n    normalizedAreaTooltip: '标准化区域提示'\r\n}","/**\r\n * @author 冷 (https://github.com/LengYXin)\r\n * @email lengyingxin8966@gmail.com\r\n * @create date 2019-06-26 16:55:28\r\n * @modify date 2019-06-26 16:55:28\r\n * @desc [description]\r\n */\r\nimport { ColDef, ColumnRowGroupChangedEvent, GridApi, GridReadyEvent, SelectionChangedEvent, SortChangedEvent, ColGroupDef } from 'ag-grid-community';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-fresh.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-blue.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\n// import 'ag-grid-community/dist/styles/ag-theme-bootstrap.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport { LicenseManager } from 'ag-grid-enterprise';\r\nimport { AgGridReact, AgGridReactProps } from 'ag-grid-react';\r\nimport { Button, Icon, Pagination, Spin, Switch } from 'antd';\r\nimport { PaginationProps } from 'antd/lib/pagination';\r\nimport globalConfig from 'global.config';\r\nimport lodash from 'lodash';\r\nimport { BindAll, Debounce } from 'lodash-decorators';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport Store from 'store/dataSource';\r\nimport Regular from 'utils/Regular';\r\nimport RequestFiles from 'utils/RequestFiles';\r\nimport { ToImg } from '../help/toImg';\r\nimport localeText from './localeText ';\r\nimport { IntlProvider } from 'react-intl';\r\nimport { getLocalesValue, getLocales } from 'locale';\r\nLicenseManager.setLicenseKey('ag-Grid_Evaluation_License_Not_for_Production_100Devs30_August_2037__MjU4ODczMzg3NzkyMg==9e93ed5f03b0620b142770f2594a23a2');\r\ndeclare namespace AgGridReactProps {\r\n    interface ColDef {\r\n        headerName?: Object;\r\n    }\r\n}\r\n\r\ninterface ITableProps extends AgGridReactProps {\r\n    /** 状态 */\r\n    Store: Store;\r\n    /**\r\n     * 行 操作\r\n     */\r\n    rowAction?: any;\r\n    /**\r\n     * 行 操作列配置\r\n     */\r\n    rowActionCol?: ColDef;\r\n    /**\r\n     * 容器样式\r\n     */\r\n    style?: React.CSSProperties;\r\n    /**\r\n     * 主题\r\n     */\r\n    theme?: string;\r\n    /**\r\n     * 样式\r\n     */\r\n    className?: string;\r\n    /**\r\n     * 分页\r\n     */\r\n    paginationProps?: PaginationProps | boolean;\r\n    /**\r\n     * 加载中\r\n     */\r\n    loading?: boolean;\r\n    /**\r\n     * 选择\r\n     */\r\n    checkboxSelection?: boolean;\r\n}\r\nconst frameworkRender = {\r\n    // 图片\r\n    columnsRenderImg: (props) => {\r\n        return columnsRenderImg(props.value, props.data)\r\n    },\r\n    // 布尔\r\n    columnsRenderBoolean: (props) => {\r\n        return (props.value === true || props.value === 'true') ? <Switch checkedChildren={<Icon type=\"check\" />} unCheckedChildren={<Icon type=\"close\" />} disabled defaultChecked /> : <Switch checkedChildren={<Icon type=\"check\" />} unCheckedChildren={<Icon type=\"close\" />} disabled />\r\n    },\r\n    // 下载\r\n    columnsRenderDownload: (props) => {\r\n        if (props.value) {\r\n            return <div style={{ textAlign: \"center\" }} >\r\n                <Button style={{ height: 25, width: 25, objectFit: \"cover\" }} shape=\"circle\" icon=\"download\" onClick={e => {\r\n                    window.open(RequestFiles.onFileDownload(props.value))\r\n                }} />\r\n            </div>\r\n        }\r\n        return null\r\n    },\r\n    // 默认\r\n    columnsRenderDefault: (props) => {\r\n        if (props.value) {\r\n            let render = props.value\r\n            // colDef.field\r\n            if (Regular.isHtml.test(props.value)) {\r\n                render = <span dangerouslySetInnerHTML={{ __html: props.value }}></span>\r\n            }\r\n            // // 前景色\r\n            // const forecolor = lodash.get(props.data, props.colDef.field + '__forecolor');\r\n            // // 背景色\r\n            // const backcolor = lodash.get(props.data, props.colDef.field + '__backcolor');\r\n            // if (forecolor || backcolor) {\r\n            //     render = <div style={{ color: forecolor, backgroundColor: backcolor, display: \"inline-block\" }}>{render}</div>\r\n            // }\r\n            return render\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n}\r\n// export class AgGrid extends React.Component<ITableProps, any> {\r\n//     /**\r\n//      * 全屏 容器\r\n//      */\r\n//     refFullscreen = React.createRef<HTMLDivElement>();\r\n//     render() {\r\n//         let {\r\n//             ...props\r\n//         } = this.props;\r\n//         return (\r\n//             <Table {...props} />\r\n//         );\r\n//     }\r\n// }\r\n@observer\r\n@BindAll()\r\nexport class GridCommunity extends React.Component<ITableProps, any> {\r\n    gridApi: GridReadyEvent;\r\n    // 表格容器\r\n    refTableBody = React.createRef<HTMLDivElement>();\r\n    // 事件对象\r\n    resizeEvent: Subscription;\r\n    minHeight = 400;\r\n    state = {\r\n        sortable: true,\r\n        height: this.minHeight\r\n    }\r\n    /**\r\n     * 修改 高度\r\n     * @param refFullscreen\r\n     */\r\n    @Debounce(100)\r\n    onUpdateHeight(refFullscreen = false) {\r\n        try {\r\n            // props 中传递了 height\r\n            if (this.props.style && this.props.style.height) {\r\n                return\r\n            }\r\n            const refTable = this.refTableBody.current;//ReactDOM.findDOMNode(this.ref.current) as HTMLDivElement;\r\n            // 60 是头部 标题栏 高度\r\n            let height = window.innerHeight - refTable.offsetTop - 168;\r\n            if (!globalConfig.settings.tabsPage) {\r\n                height += 90;\r\n            }\r\n            height = height < this.minHeight ? this.minHeight : height;\r\n            if (this.state.height !== height) {\r\n                this.gridApi.api.sizeColumnsToFit();\r\n                this.setState({ height });\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    // onGetColumnDefs() {\r\n    //     let columnDefs = [...this.props.columnDefs];\r\n    //     console.log(columnDefs.reduce((accumulator, currentValue) => {\r\n    //         return accumulator.width + currentValue.w\r\n    //     }), 0)\r\n    //     return columnDefs;\r\n    // }\r\n    /**\r\n     * 分页 参数 改变回调\r\n     * @param current\r\n     * @param pageSize\r\n     */\r\n    onChangePagination(current: number, pageSize: number) {\r\n        console.log(\"TCL: App -> onChangePagination -> \", current, pageSize)\r\n        this.props.Store.onSearch({\r\n            Page: current,\r\n            Limit: pageSize\r\n        });\r\n    }\r\n    onSortChanged(event: SortChangedEvent) {\r\n        const SortModel = lodash.head(event.api.getSortModel());\r\n        this.props.Store.onSearch({\r\n            SortInfo: SortModel && SortModel.sort && { Direction: lodash.capitalize(SortModel.sort), Property: SortModel.colId },\r\n            Page: 1,\r\n            Limit: this.props.Store.DataSource.searchParams.Limit\r\n        })\r\n    }\r\n    /**\r\n     * 选择的 行 数据 回调\r\n     * @param event\r\n     */\r\n    onSelectionChanged(event: SelectionChangedEvent) {\r\n        // console.log(\"TCL: App -> onSelectionChanged -> event\", event.api.getSelectedRows())\r\n        // event.api.getSelectedNodesById()\r\n        this.props.Store.DataSource.selectedRowKeys = lodash.map(event.api.getSelectedRows(), 'key');\r\n    }\r\n    onColumnRowGroupChanged(event: ColumnRowGroupChangedEvent) {\r\n        // this.setState({ sortable: event.columns.length > 0 })\r\n    }\r\n    async componentDidMount() {\r\n        this.onUpdateHeight();\r\n        this.resizeEvent = fromEvent(window, \"resize\").pipe(debounceTime(300)).subscribe(e => {\r\n            // 获取当前高度 ，高度 为 0 说明页面属于隐藏状态\r\n            if (lodash.get(this.refTableBody.current, 'clientHeight', 0) > 0) {\r\n                // if (!globalConfig.settings.tabsPage) {\r\n                this.onUpdateHeight(lodash.get(e, 'detail') === 'refFullscreen');\r\n                // }\r\n                // this.sizeColumnsToFit();\r\n                this.autoSizeAll();\r\n            }\r\n        });\r\n        // await this.props.Store.onSearch();\r\n        lodash.defer(() => {\r\n            this.sizeColumnsToFit();\r\n            this.autoSizeAll();\r\n            this.setSelected();\r\n        });\r\n    }\r\n    @Debounce(50)\r\n    autoSizeAll() {\r\n        // var allColumnIds = [];\r\n        // this.gridApi.columnApi.getAllColumns().forEach((column: any) => {\r\n        //     allColumnIds.push(column.colId);\r\n        // });\r\n        this.gridApi.columnApi.autoSizeColumns(['RowAction']);\r\n    }\r\n    setSelected() {\r\n        this.gridApi &&\r\n            this.gridApi.api.forEachNode((rowNode) => {\r\n                rowNode.setSelected(lodash.includes(this.props.Store.DataSource.selectedRowKeys, lodash.get(rowNode, 'data.key')));\r\n            });\r\n    }\r\n    componentWillUnmount() {\r\n        this.resizeEvent && this.resizeEvent.unsubscribe()\r\n    }\r\n    sizeColumnsToFit() {\r\n        if (lodash.get(this.refTableBody.current, 'clientHeight', 0) && this.gridApi) {\r\n            this.gridApi.api.sizeColumnsToFit();\r\n        }\r\n    }\r\n    onGridReady(event: GridReadyEvent) {\r\n        this.gridApi = event;\r\n        lodash.defer(() => {\r\n            this.sizeColumnsToFit();\r\n            // this.autoSizeAll();\r\n            this.setSelected();\r\n        });\r\n    }\r\n    public render() {\r\n        let {\r\n            Store,\r\n            rowAction: RowAction,\r\n            rowActionCol,\r\n            paginationProps,\r\n            style,\r\n            theme = globalConfig.settings.agGridTheme,//'ag-theme-balham',\r\n            className = '',\r\n            children,\r\n            onGridReady,\r\n            loading,\r\n            defaultColDef,\r\n            columnDefs,\r\n            checkboxSelection = true,\r\n            frameworkComponents,\r\n            // rowData,\r\n            ...props\r\n        } = this.props;\r\n        const { DataSource, PageState } = Store;\r\n        const { language } = globalConfig;\r\n        const dataSource = DataSource.tableList;\r\n        const checkboxSelectionWidth = {\r\n            \"ag-theme-balham\": 40,\r\n            \"ag-theme-material\": 70,\r\n            \"ag-theme-alpine\": 50,\r\n        }[theme];\r\n        if (loading) {\r\n            props.rowData = undefined\r\n        } else {\r\n            props.rowData = toJS(dataSource.Data);\r\n        }\r\n        // 分组工具栏\r\n        if (!!!props.treeData && !props.rowGroupPanelShow) {\r\n            props.rowGroupPanelShow = \"always\"\r\n        }\r\n        columnDefs = lodash.cloneDeep(columnDefs);\r\n        const colDefMap = (col: any) => {\r\n            // 根据 数据 定制 样式\r\n            col.cellStyle = col.cellStyle ||\r\n                ((props) => {\r\n                    if (props.data) {\r\n                        // 前景色\r\n                        const forecolor = lodash.get(props.data, props.colDef.field + '__forecolor');\r\n                        // 背景色\r\n                        const backcolor = lodash.get(props.data, props.colDef.field + '__bgcolor');\r\n                        return { color: forecolor, backgroundColor: backcolor }\r\n                    }\r\n                });\r\n            // 渲染器\r\n            col.cellRenderer = col.cellRenderer || 'columnsRenderDefault';\r\n            // if (language === \"en-US\") {\r\n            //     col.headerName = col.field;\r\n            // }\r\n            if (col.field != \"RowAction\") {\r\n                col.headerName = getLocalesValue(col.headerName, col.headerName);\r\n            }\r\n            if (col.children) {\r\n                col.children = col.children.map(colDefMap);\r\n            }\r\n            return col\r\n        }\r\n        if (checkboxSelection) {\r\n            columnDefs.unshift({\r\n                // pivotIndex: 0,\r\n                rowDrag: false,\r\n                dndSource: false,\r\n                lockPosition: true,\r\n                // dndSourceOnRowDrag: false,\r\n                suppressMenu: true,\r\n                suppressSizeToFit: true,\r\n                suppressMovable: true,\r\n                suppressNavigable: true,\r\n                suppressCellFlash: true,\r\n                // rowGroup: false,\r\n                enableRowGroup: false,\r\n                enablePivot: false,\r\n                enableValue: false,\r\n                suppressResize: false,\r\n                editable: false,\r\n                suppressColumnsToolPanel: true,\r\n                suppressAutoSize: true,\r\n                filter: false,\r\n                resizable: false,\r\n                checkboxSelection: true,\r\n                headerCheckboxSelection: true,\r\n                width: checkboxSelectionWidth,\r\n                maxWidth: checkboxSelectionWidth,\r\n                minWidth: checkboxSelectionWidth,\r\n                pinned: 'left',\r\n            });\r\n        }\r\n        if (RowAction) {\r\n            columnDefs.push({\r\n                headerName: language === \"zh-CN\" ? \"操作\" : 'Action',\r\n                field: \"RowAction\",\r\n                cellRenderer: 'RowAction',\r\n                pinned: 'right',\r\n                sortable: false,\r\n                menuTabs: [],\r\n                // minWidth: 120,\r\n                ...rowActionCol,\r\n            })\r\n        }\r\n        // 替换默认的渲染器\r\n        columnDefs = columnDefs.map(colDefMap);\r\n\r\n        // console.log(\"TCL: GridCommunity -> render -> PageState.tableLoading\", PageState.tableLoading)\r\n        const key = `${theme}_${language}`;\r\n        const PVmessages = getLocales(language);\r\n\r\n        return (\r\n            <>\r\n                <div ref={this.refTableBody} style={{ height: this.state.height, ...style }} className={`app-ag-grid  ${className} ${theme}`}>\r\n                    <Spin spinning={PageState.tableLoading} size=\"large\" indicator={<Icon type=\"loading\" spin />} />\r\n                    <AgGridReact\r\n                        key={key}\r\n                        // 内置 翻译 替换\r\n                        localeText={language === \"zh-CN\" && localeText}\r\n                        // suppressMenuHide\r\n                        // 禁用“加载” 叠加层。\r\n                        suppressNoRowsOverlay\r\n                        // 禁用“无行” 覆盖。\r\n                        suppressLoadingOverlay\r\n                        // 设置为true以启用范围选择。\r\n                        enableRangeSelection\r\n                        animateRows\r\n                        // suppressMakeColumnVisibleAfterUnGroup\r\n                        // suppressDragLeaveHidesColumns\r\n                        rowSelection=\"multiple\"\r\n                        // 分组工具栏 \r\n                        // rowGroupPanelShow=\"always\"\r\n                        sideBar={{\r\n                            toolPanels: [\r\n                                {\r\n                                    id: 'columns',\r\n                                    labelDefault: 'Columns',\r\n                                    labelKey: 'columns',\r\n                                    iconKey: 'columns',\r\n                                    toolPanel: 'agColumnsToolPanel',\r\n                                    toolPanelParams: {\r\n                                        // suppressRowGroups: true,\r\n                                        suppressValues: true,\r\n                                        suppressPivots: true,\r\n                                        suppressPivotMode: true\r\n                                        // suppressSideButtons: true,\r\n                                        // suppressColumnFilter: true,\r\n                                        // suppressColumnSelectAll: true,\r\n                                        // suppressColumnExpandAll: true\r\n                                    }\r\n                                },\r\n                                {\r\n                                    id: 'filters',\r\n                                    labelDefault: 'Filters',\r\n                                    labelKey: 'filters',\r\n                                    iconKey: 'filter',\r\n                                    toolPanel: 'agFiltersToolPanel',\r\n                                }\r\n                            ]\r\n                        }}\r\n                        {...props}\r\n                        frameworkComponents={\r\n                            {\r\n                                RowAction: (rowProps) => {\r\n                                    if (rowProps.data) {\r\n                                        return <IntlProvider locale={language} messages={PVmessages}>\r\n                                            <RowAction {...rowProps} />\r\n                                        </IntlProvider>;\r\n                                    }\r\n                                    return null;\r\n                                },\r\n                                ...frameworkRender,\r\n                                ...frameworkComponents,\r\n                            }\r\n                        }\r\n                        defaultColDef={{\r\n                            // editable: true,\r\n                            resizable: true,\r\n                            sortable: true,\r\n                            minWidth: 100,\r\n                            filter: true,\r\n                            enableRowGroup: true,\r\n                            ...defaultColDef\r\n                        }}\r\n                        autoGroupColumnDef={{\r\n                            sortable: false\r\n                        }}\r\n                        columnDefs={columnDefs}\r\n                        // 分组改变\r\n                        onColumnRowGroupChanged={this.onColumnRowGroupChanged}\r\n                        // 选择框\r\n                        onSelectionChanged={this.onSelectionChanged}\r\n                        // 排序\r\n                        onSortChanged={this.onSortChanged}\r\n                        onGridReady={event => {\r\n                            onGridReady && onGridReady(event);\r\n                            this.onGridReady(event);\r\n                        }}\r\n                        onRowDataChanged={event => {\r\n                            // this.gridApi.api.sizeColumnsToFit();\r\n                            this.autoSizeAll()\r\n                        }}\r\n                    />\r\n                    {/* </Spin> */}\r\n                </div>\r\n                <div className='app-table-pagination'>\r\n                    <Pagination\r\n\r\n                        {...{\r\n                            disabled: PageState.tableLoading,\r\n                            position: \"bottom\",\r\n                            showSizeChanger: true,//是否可以改变 pageSize\r\n                            showQuickJumper: true,\r\n                            pageSize: dataSource.Limit,\r\n                            pageSizeOptions: lodash.get(globalConfig, 'pageSizeOptions', ['10', '20', '30', '40', '50', '100', '200']),\r\n                            size: \"small\",\r\n                            current: dataSource.Page,\r\n                            // defaultPageSize: dataSource.Limit,\r\n                            // defaultCurrent: dataSource.Page,\r\n                            total: dataSource.Count,\r\n                            onChange: this.onChangePagination,\r\n                            onShowSizeChange: this.onChangePagination\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GridCommunity\r\n\r\n/**\r\n * 重写 列渲染 函数 \r\n * @param text \r\n * @param record \r\n */\r\nexport function columnsRender(text, record) {\r\n    if (lodash.isBoolean(text) || text === \"true\" || text === \"false\") {\r\n        text = (text === true || text === \"true\") ? <Switch checkedChildren={<Icon type=\"check\" />} unCheckedChildren={<Icon type=\"close\" />} disabled defaultChecked /> : <Switch checkedChildren={<Icon type=\"check\" />} unCheckedChildren={<Icon type=\"close\" />} disabled />;\r\n    } else if (Regular.isHtml.test(text)) {\r\n        // text = <Popover content={\r\n                        console.log(\"🚀 ~ file: gridCommunity.tsx ~ line 501 ~ GridCommunity ~ render ~ event\", event)\r\n                        console.log(\"🚀 ~ file: gridCommunity.tsx ~ line 501 ~ GridCommunity ~ render ~ event\", event)\r\n        //     <div dangerouslySetInnerHTML={{ __html: text }}></div>\r\n        // } trigger=\"hover\">\r\n        //     <a>查看详情</a>\r\n        // </Popover>\r\n        text = <div className=\"data-view-columns-render\" style={record.__style} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n    }\r\n    // if (lodash.isString(text) && text.length <= 12) {\r\n    //     return text\r\n    // }\r\n    return <div className=\"data-view-columns-render\" title={text} style={record.__style}>\r\n        <span>{text}</span>\r\n    </div>\r\n}\r\n/**\r\n * 重写 图片 函数 \r\n * @param text \r\n * @param record \r\n */\r\nexport function columnsRenderImg(text, record) {\r\n    return <div>\r\n        <ToImg fileID={text} />\r\n    </div>\r\n}\r\n/**\r\n * 重写 下载 函数 \r\n * @param text \r\n * @param record \r\n */\r\nexport function columnsRenderDownload(text, record) {\r\n    if (text) {\r\n        return <div style={{ textAlign: \"center\" }} >\r\n            <Button shape=\"circle\" icon=\"download\" onClick={e => {\r\n                window.open(RequestFiles.onFileDownload(text))\r\n            }} />\r\n        </div>\r\n    }\r\n    return null\r\n}"],"sourceRoot":""}