{"version":3,"sources":["pages/frameworkmenu/store/index.ts","pages/frameworkmenu/views/models.tsx","pages/frameworkmenu/views/forms.tsx","pages/frameworkmenu/views/action.tsx","pages/frameworkmenu/views/other.tsx","pages/frameworkmenu/views/search.tsx","pages/frameworkmenu/views/table.tsx","pages/frameworkmenu/index.tsx","../node_modules/lodash/trim.js","../node_modules/lodash/_charsEndIndex.js"],"names":["BindAll","Apis","search","url","method","details","insert","update","delete","import","export","exportIds","template","this","Observable","Request","ajax","toPromise","res","message","info","Value","params","PageState","tableLoading","onSearch","Data","map","value","treePath","PageName","ParentID","recursionTree","DataSource","tableList","datalist","ParentId","children","findData","unshift","Fonts","name","class","icons","AntIcons","fill","mergeLocales","pages","sub","then","PagesList","default","item","controller","push","Text","getLocalesValue","Url","path","next","complete","props","label","id","rules","values","txt","formItem","placeholder","getLocalesTemplate","dataSource","onChange","option","subscribe","data","form","setFieldsValue","undefined","mode","linkage","ModelName","cache","body","checkedChildren","type","unCheckedChildren","models","key","fieId","IconId","state","iconType","iconItems","onGetItems","event","setState","fontClass","split","length","icon","span","showSearch","style","width","onChangeType","allowClear","filterOption","input","toLowerCase","indexOf","Option","onGetIcon","React","InsertForm","DialogFormDes","onFormSubmit","Store","onInsert","observer","Models","IsInside","Help","FormValueEqual","layout","hidden","UpdateForm","onUpdate","onLoadData","onDetails","getFieldDecorator","InfoForm","display","render","ActionEvents","onExport","onExportIds","onDelete","onDeleteList","selectedRowKeys","confirm","title","text","onOk","a","onCancel","pageAction","DesError","deletelength","disabled","className","onClick","onRefreshMenu","visible","onAuthorizeActions","loadData","overlay","Item","rowAction","showSubmit","onConfirm","DesForm","defaultValues","toJS","searchParams","columnDefs","headerName","field","cellRenderer","treeData","groupDefaultExpanded","getDataPath","autoGroupColumnDef","cellRendererParams","suppressCount","Action","frameworkComponents","renderIcon","Icon","fontSize","Component","App","AuthorizeDecorator","PageStore","baseToString","castSlice","charsEndIndex","charsStartIndex","stringToArray","toString","reTrim","module","exports","string","chars","guard","replace","strSymbols","chrSymbols","start","end","join","baseIndexOf","index"],"mappings":"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","file":"static/js/9.aa807f77.chunk.js","sourcesContent":["import { BindAll } from 'lodash-decorators';\r\nimport lodash from 'lodash';\r\nimport DataSource, { ISearchParams } from 'store/dataSource';\r\nimport { message } from 'antd';\r\n@BindAll()\r\nexport class Store extends DataSource {\r\n    constructor() {\r\n        super({\r\n            // IdKey: \"ID\", 默认 ID\r\n            // Target: \"/api\", 默认 /api\r\n            Apis: {\r\n                search: {\r\n                    url: \"/_frameworkmenu/search\",\r\n                    method: \"post\"\r\n                },\r\n                details: {\r\n                    // 支持 嵌套 参数 /user/{ID}/{AAA}/{BBB}\r\n                    url: \"/_frameworkmenu/{ID}\",\r\n                    method: \"get\"\r\n                },\r\n                insert: {\r\n                    url: \"/_frameworkmenu/add\",\r\n                    method: \"post\"\r\n                },\r\n                update: {\r\n                    url: \"/_frameworkmenu/edit\",\r\n                    method: \"put\"\r\n                },\r\n                delete: {\r\n                    url: \"/_frameworkmenu/BatchDelete\",\r\n                    method: \"post\"\r\n                },\r\n                import: {\r\n                    url: \"/_frameworkmenu/import\",\r\n                    method: \"post\"\r\n                },\r\n                export: {\r\n                    url: \"/_frameworkmenu/ExportExcel\",\r\n                    method: \"post\"\r\n                },\r\n                exportIds: {\r\n                    url: \"/_frameworkmenu/ExportExcelByIds\",\r\n                    method: \"post\"\r\n                },\r\n                template: {\r\n                    url: \"/_frameworkmenu/GetExcelTemplate\",\r\n                    method: \"get\"\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 刷新菜单\r\n     */\r\n    async onRefreshMenu() {\r\n        const res = await this.Observable.Request.ajax('/_FrameworkMenu/RefreshMenu').toPromise();\r\n        // console.log(\"TCL: Store -> onRefreshMenu -> res\", res)\r\n        message.info(res.Value)\r\n    }\r\n    /** 搜索 */\r\n    async onSearch(params?: ISearchParams) {\r\n        try {\r\n            this.PageState.tableLoading = true;\r\n            const res = await this.Observable.onSearch(params);\r\n            // 格式化树结构数据\r\n            res.Data = res.Data.map(value => {\r\n                value.treePath = [value.PageName];\r\n                if (value.ParentID) {\r\n                    value.treePath = this.recursionTree(res.Data, value.ParentID, value.treePath);\r\n                }\r\n                return value;\r\n            });\r\n            console.log(\"TCL: Store -> onSearch -> res.Data\", res.Data)\r\n\r\n            this.DataSource.tableList = res;\r\n            return res;\r\n        } catch (error) {\r\n            console.warn(error)\r\n        }\r\n        finally {\r\n            this.PageState.tableLoading = false;\r\n        }\r\n    }\r\n    /**\r\n    * 递归 格式化 树\r\n    * @param datalist \r\n    * @param ParentId \r\n    * @param children \r\n    */\r\n    recursionTree(datalist, ParentId, children = []) {\r\n        const findData = lodash.find(datalist, ['ID', ParentId]);\r\n        if (findData) {\r\n            children.unshift(findData.PageName);\r\n            if (findData.ParentID) {\r\n                this.recursionTree(datalist, findData.ParentID, children);\r\n            }\r\n        }\r\n        return children;\r\n    }\r\n}\r\nexport default new Store();","import { Input, Switch, Icon, Select, Upload, message, Modal, InputNumber, Row, Col, Checkbox } from 'antd';\r\nimport { WtmCascader, WtmCheckbox, WtmDatePicker, WtmEditor, WtmRadio, WtmSelect, WtmTransfer, WtmUploadImg, WtmUpload } from 'components/form';\r\nimport { FormItem } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport lodash from 'lodash';\r\nimport { Observable } from 'rxjs';\r\nimport Regular from 'utils/Regular';\r\nimport AntIcons from \"@ant-design/icons/lib/manifest\";\r\nimport Fonts from \"assets/font/font\";\r\nimport Request from 'utils/Request';\r\nimport { BindAll } from 'lodash-decorators';\r\nimport { mergeLocales, getLocalesValue, getLocalesTemplate } from 'locale';\r\nimport { FormattedMessage } from 'react-intl';\r\nFonts.unshift({\r\n    name: \"Antd\",\r\n    class: \"Antd\",\r\n    icons: AntIcons.fill,\r\n})\r\n\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'frameworkmenu.PageName': '页面名称',\r\n        'frameworkmenu.SelectedModule': '模块名称',\r\n        'frameworkmenu.SelectedActionIDs': '动作名称',\r\n        'frameworkmenu.FolderOnly': '目录',\r\n        'frameworkmenu.ShowOnMenu': '菜单显示',\r\n        'frameworkmenu.IsPublic': '公开',\r\n        'frameworkmenu.DisplayOrder': '顺序',\r\n        'frameworkmenu.IsInside': '地址类型',\r\n        'frameworkmenu.IsInside.0': '内部地址',\r\n        'frameworkmenu.IsInside.1': '外部地址',\r\n        'frameworkmenu.Url': 'Url',\r\n        'frameworkmenu.Icon': '图标',\r\n        'frameworkmenu.ParentId': '父目录',\r\n    },\r\n    \"en-US\": {\r\n        'frameworkmenu.PageName': 'PageName',\r\n        'frameworkmenu.SelectedModule': 'Module',\r\n        'frameworkmenu.SelectedActionIDs': 'Actions',\r\n        'frameworkmenu.FolderOnly': 'Folder',\r\n        'frameworkmenu.ShowOnMenu': 'ShowOnMenu',\r\n        'frameworkmenu.IsPublic': 'IsPublic',\r\n        'frameworkmenu.DisplayOrder': 'DisplayOrder',\r\n        'frameworkmenu.IsInside': 'UrlType',\r\n        'frameworkmenu.IsInside.0': 'Inside Url',\r\n        'frameworkmenu.IsInside.1': 'Ourside Url',\r\n        'frameworkmenu.Url': 'Url',\r\n        'frameworkmenu.Icon': 'Icon',\r\n        'frameworkmenu.ParentId': 'ParentFolder',\r\n    }\r\n});\r\n\r\n/**\r\n * label  标识\r\n * rules   校验规则，参考下方文档  https://ant.design/components/form-cn/#components-form-demo-validate-other\r\n * formItem  表单组件\r\n */\r\nconst pages = new Observable<{ Text: string, Value: string, Url: string }[]>((sub) => {\r\n    import(\"pages/index\").then(pages => {\r\n        const PagesList = [];\r\n        lodash.map(pages.default, (item) => {\r\n            if (item.controller) {\r\n                PagesList.push({ Text: getLocalesValue(item.name), Value: item.controller, Url: item.path })\r\n            }\r\n        })\r\n        sub.next(PagesList);\r\n        sub.complete();\r\n    })\r\n\r\n})\r\nexport default {\r\n    /**\r\n     * 表单模型 \r\n     * @param props \r\n     */\r\n    editModels(props?): WTM.FormItem {\r\n        return {\r\n            /** 页面名称 */\r\n            \"Entity.PageName\": {\r\n                label: <FormattedMessage id='frameworkmenu.PageName' />,\r\n                rules: [{\r\n                    \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('frameworkmenu.PageName') }} />\r\n                }],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkmenu.PageName') })} />\r\n            },\r\n            /** 模块名称 */\r\n            \"SelectedModule\": {\r\n                label: <FormattedMessage id='frameworkmenu.SelectedModule' />,\r\n                rules: [],\r\n                formItem: <WtmSelect placeholder={getLocalesTemplate('tips.placeholder.choose', { txt: getLocalesValue('frameworkmenu.SelectedModule') })}\r\n                    dataSource={pages}\r\n                    onChange={(value, option) => {\r\n                        pages.subscribe(data => {\r\n                            props.form.setFieldsValue({\r\n                                'Entity.Url': lodash.get(lodash.find(data, ['Value', value]), \"Url\"),\r\n                                'SelectedActionIDs': undefined\r\n                            })\r\n                        })\r\n                    }}\r\n                />\r\n            },\r\n            /** 动作名称 */\r\n            \"SelectedActionIDs\": {\r\n                label: <FormattedMessage id='frameworkmenu.SelectedActionIDs' />,\r\n                rules: [],\r\n                formItem: <WtmSelect placeholder={getLocalesTemplate('tips.placeholder.choose', { txt: getLocalesValue('frameworkmenu.SelectedActionIDs') })}\r\n                    mode=\"multiple\"\r\n                    linkage={[\"SelectedModule\"]}\r\n                    dataSource={(props) => {\r\n                        const ModelName = lodash.get(props, 'SelectedModule');\r\n                        return ModelName && Request.cache({\r\n                            url: \"/api/_FrameworkMenu/GetActionsByModel\", body: { ModelName }\r\n                        })\r\n                    }}\r\n                />\r\n            },\r\n            /** 目录 */\r\n            \"Entity.FolderOnly\": {\r\n                label: <FormattedMessage id='frameworkmenu.FolderOnly' />,\r\n                rules: [],\r\n                formItem: <Switch checkedChildren={<Icon type=\"check\" />} unCheckedChildren={<Icon type=\"close\" />} />\r\n            },\r\n            /** 菜单显示 */\r\n            \"Entity.ShowOnMenu\": {\r\n                label: <FormattedMessage id='frameworkmenu.ShowOnMenu' />,\r\n                rules: [],\r\n                formItem: <Switch checkedChildren={<Icon type=\"check\" />} unCheckedChildren={<Icon type=\"close\" />} />\r\n            },\r\n            /** 公开 */\r\n            \"Entity.IsPublic\": {\r\n                label: <FormattedMessage id='frameworkmenu.IsPublic' />,\r\n                rules: [],\r\n                formItem: <Switch checkedChildren={<Icon type=\"check\" />} unCheckedChildren={<Icon type=\"close\" />} />\r\n            },\r\n            /** 顺序 */\r\n            \"Entity.DisplayOrder\": {\r\n                label: <FormattedMessage id='frameworkmenu.DisplayOrder' />,\r\n                rules: [{\r\n                    \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('frameworkmenu.DisplayOrder') }} />\r\n                }],\r\n                formItem: <InputNumber placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkmenu.DisplayOrder') })} />\r\n            },\r\n            /** 内部地址 */\r\n            \"Entity.IsInside\": {\r\n                label: <FormattedMessage id='frameworkmenu.IsInside' />,\r\n                rules: [{\r\n                    \"required\": true, \"message\": <FormattedMessage id='tips.error.required' values={{ txt: getLocalesValue('frameworkmenu.IsInside') }} />\r\n                }],\r\n                formItem: <WtmRadio\r\n                    dataSource={[\r\n                        { Text: <FormattedMessage id='frameworkmenu.IsInside.0' />, Value: true },\r\n                        { Text: <FormattedMessage id='frameworkmenu.IsInside.1' />, Value: false },\r\n                    ]} />\r\n            },\r\n            /** Url */\r\n            \"Entity.Url\": {\r\n                label: <FormattedMessage id='frameworkmenu.Url' />,\r\n                rules: [],\r\n                formItem: <Input placeholder={getLocalesTemplate('tips.placeholder.input', { txt: getLocalesValue('frameworkmenu.Url') })} />\r\n            },\r\n            \"Entity.Icon\": {\r\n                label: <FormattedMessage id='frameworkmenu.Icon' />,\r\n                rules: [],\r\n                formItem: <IconId />\r\n            },\r\n            /** 父目录 */\r\n            \"Entity.ParentId\": {\r\n                label: <FormattedMessage id='frameworkmenu.ParentId' />,\r\n                rules: [],\r\n                formItem: <WtmSelect placeholder={getLocalesTemplate('tips.placeholder.choose', { txt: getLocalesValue('frameworkmenu.ParentId') })}\r\n                    dataSource={Request.cache({ url: \"/api/_FrameworkMenu/GetFolders\" })}\r\n                />\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 搜索 模型 \r\n     * @param props \r\n     */\r\n    searchModels(props?): WTM.FormItem {\r\n        return {\r\n\r\n        }\r\n    },\r\n    /**\r\n     * 渲染 模型\r\n     */\r\n    renderModels(props?) {\r\n        return lodash.map(props.models, (value, key) => {\r\n            return <FormItem {...props} fieId={key} key={key} />\r\n        })\r\n    },\r\n\r\n    getValue(props: WTM.FormProps, fieId, defaultvalue = undefined) {\r\n        var rv = lodash.toString(props.form.getFieldValue(fieId) || lodash.get(props.defaultValues, fieId));\r\n        console.log(\"rv=\" + rv);\r\n        if (rv == \"\") {\r\n            rv = lodash.toString(defaultvalue);\r\n        }\r\n        return rv;\r\n    }\r\n}\r\n@BindAll()\r\nclass IconId extends React.Component<any, any> {\r\n    state = {\r\n        // 自定义\r\n        // custom: false,\r\n        iconType: 'Antd',\r\n        iconItems: this.onGetItems('Antd')\r\n    }\r\n    onGetItems(iconType): string[] {\r\n        return lodash.get(lodash.find(Fonts, ['class', iconType]), 'icons', [])\r\n    }\r\n    onChange(event) {\r\n        this.props.onChange(event);\r\n    }\r\n    onChangeType(event) {\r\n        this.setState({ iconType: event, iconItems: this.onGetItems(event) });\r\n        this.onChange(undefined)\r\n    }\r\n    onSearch() {\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    UNSAFE_componentWillMount() {\r\n        if (this.props.value) {\r\n            // 某人 懒得加字段。就自己用一个字段截取吧\r\n            const fontClass = lodash.trim(this.props.value).split(' ');\r\n            // 自定义\r\n            if (fontClass.length > 1) {\r\n                const iconType = fontClass[0];\r\n                this.setState({ iconType: iconType, iconItems: this.onGetItems(iconType) })\r\n            }\r\n        }\r\n    }\r\n    onGetIcon(icon) {\r\n        // 自定义 图标 需要 使用 name 和 class名称拼接，并且前面需要一个空格\r\n        return this.state.iconType === \"Antd\" ? icon : ` ${this.state.iconType} ${icon}`;\r\n    }\r\n    render() {\r\n        return (\r\n            <Row type=\"flex\">\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: '100%' }}\r\n                        placeholder=\"Icon Type\"\r\n                        onChange={this.onChangeType}\r\n                        value={this.state.iconType}\r\n                        allowClear\r\n                        // onSearch={this.onSearch}\r\n                        filterOption={(input, option: any) => option.props.value && option.props.value.toLowerCase().indexOf(input && input.toLowerCase()) >= 0}\r\n                    >\r\n                        {Fonts.map(data => {\r\n                            return <Select.Option key={data.name} value={data.class}><span>{data.name}</span></Select.Option>\r\n                        })}\r\n                    </Select>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        style={{ width: '100%' }}\r\n                        placeholder=\"Icon\"\r\n                        onChange={this.onChange}\r\n                        value={this.props.value || undefined}\r\n                        allowClear\r\n                        // onSearch={this.onSearch}\r\n                        filterOption={(input, option: any) => option.props.value && option.props.value.toLowerCase().indexOf(input && input.toLowerCase()) >= 0}\r\n                    >\r\n                        {this.state.iconItems.map(data => {\r\n                            const key = this.onGetIcon(data);\r\n                            return <Select.Option key={key} value={key}><Icon type={key} />：<span>{data}</span></Select.Option>\r\n                        })}\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n","import { DialogFormDes, FormItem, InfoShellLayout } from 'components/dataView';\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store'; //页面状态\r\nimport Models from './models'; //模型\r\nimport { Help } from 'utils/Help';\r\nimport { Icon } from 'antd';\r\n\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        return Store.onInsert(values)\r\n    }\r\n})\r\n@observer\r\nexport class InsertForm extends React.Component<any, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n        }\r\n        const IsInside = Help.FormValueEqual(props, 'Entity.IsInside', true, true);\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"Entity.IsInside\" layout=\"row\" value={true} />\r\n            <FormItem {...props} fieId=\"Entity.Url\" layout=\"row\" hidden={IsInside} />\r\n            <FormItem {...props} fieId=\"SelectedModule\" hidden={!IsInside} />\r\n            <FormItem {...props} fieId=\"SelectedActionIDs\" hidden={!IsInside} />\r\n            <FormItem {...props} fieId=\"Entity.PageName\" />\r\n            <FormItem {...props} fieId=\"Entity.ParentId\" />\r\n            <FormItem {...props} fieId=\"Entity.FolderOnly\" />\r\n            <FormItem {...props} fieId=\"Entity.ShowOnMenu\" value={true} />\r\n            <FormItem {...props} fieId=\"Entity.IsPublic\" />\r\n            <FormItem {...props} fieId=\"Entity.DisplayOrder\" />\r\n            <FormItem {...props} fieId=\"Entity.Icon\" />\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 修改表单\r\n */\r\n@DialogFormDes({\r\n    onFormSubmit(values) {\r\n        return Store.onUpdate(values)\r\n    },\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class UpdateForm extends React.Component<WTM.FormProps, any> {\r\n    // 创建模型\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const { form } = this.props;\r\n        const { getFieldDecorator } = form;\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n        }\r\n        const IsInside = Help.FormValueEqual(props, 'Entity.IsInside', true, true);\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"Entity.ID\" hidden />\r\n            <FormItem {...props} fieId=\"Entity.IsInside\" layout=\"row\" />\r\n            <FormItem {...props} fieId=\"Entity.Url\" layout=\"row\" hidden={IsInside} />\r\n            <FormItem {...props} fieId=\"SelectedModule\" hidden={!IsInside} />\r\n            <FormItem {...props} fieId=\"SelectedActionIDs\" hidden={!IsInside} />\r\n            <FormItem {...props} fieId=\"Entity.PageName\" />\r\n            <FormItem {...props} fieId=\"Entity.ParentId\" />\r\n            <FormItem {...props} fieId=\"Entity.FolderOnly\" />\r\n            <FormItem {...props} fieId=\"Entity.ShowOnMenu\" />\r\n            <FormItem {...props} fieId=\"Entity.IsPublic\" />\r\n            <FormItem {...props} fieId=\"Entity.DisplayOrder\" />\r\n            <FormItem {...props} fieId=\"Entity.Icon\" />\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n/**\r\n * 详情\r\n */\r\n@DialogFormDes({\r\n    onLoadData(values, props) {\r\n        return Store.onDetails(values)\r\n    }\r\n})\r\n@observer\r\nexport class InfoForm extends React.Component<WTM.FormProps, any> {\r\n    models = Models.editModels(this.props);\r\n    render() {\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            display: true,\r\n        }\r\n        const IsInside = Help.FormValueEqual(props, 'Entity.IsInside', true, true);\r\n        return <InfoShellLayout>\r\n            <FormItem {...props} fieId=\"Entity.IsInside\" layout=\"row\" />\r\n            <FormItem {...props} fieId=\"Entity.Url\" layout=\"row\" hidden={IsInside} />\r\n            <FormItem {...props} fieId=\"SelectedModule\" hidden={!IsInside} />\r\n            <FormItem {...props} fieId=\"SelectedActionIDs\" hidden={!IsInside} />\r\n            <FormItem {...props} fieId=\"Entity.PageName\" />\r\n            <FormItem {...props} fieId=\"Entity.ParentId\" />\r\n            <FormItem {...props} fieId=\"Entity.FolderOnly\" />\r\n            <FormItem {...props} fieId=\"Entity.ShowOnMenu\" />\r\n            <FormItem {...props} fieId=\"Entity.IsPublic\" />\r\n            <FormItem {...props} fieId=\"Entity.DisplayOrder\" />\r\n            <FormItem {...props} fieId=\"Entity.Icon\" render={event => {\r\n                return <Icon type={lodash.get(event, 'defaultValues.Entity.Icon')} />\r\n            }} />\r\n        </InfoShellLayout>\r\n    }\r\n}\r\n","import { Button, Divider, Dropdown, Menu, Modal, Popconfirm, Row } from 'antd';\r\nimport { DialogForm, Visible } from 'components/dataView';\r\nimport { DesError } from 'components/decorators';\r\nimport lodash from 'lodash';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport { onAuthorizeActions } from 'store/system/authorize';\r\nimport Store from '../store';\r\nimport { InfoForm, InsertForm, UpdateForm } from './forms';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { getLocalesTemplate } from 'locale';\r\n/**\r\n * 动作事件\r\n */\r\nexport const ActionEvents = {\r\n    /**\r\n     * 导出\r\n     */\r\n    onExport() {\r\n        Store.onExport()\r\n    },\r\n    /**\r\n     * 批量导出\r\n     */\r\n    onExportIds() {\r\n        Store.onExportIds()\r\n    },\r\n    /**\r\n     * 删除\r\n     * @param data \r\n     */\r\n    onDelete(data) {\r\n        Store.onDelete(data)\r\n    },\r\n    /**\r\n    * 删除\r\n    */\r\n    onDeleteList() {\r\n        const length = Store.DataSource.selectedRowKeys.length\r\n        Modal.confirm({\r\n            title: getLocalesTemplate('action.deleteConfirm', { text: length }),\r\n            onOk: async () => {\r\n                Store.onDelete(Store.DataSource.selectedRowKeys)\r\n            },\r\n            onCancel() { },\r\n        });\r\n    },\r\n}\r\n/**\r\n * 表格 所有 动作\r\n */\r\n@DesError\r\n@observer\r\nclass PageAction extends React.Component<any, any> {\r\n    render() {\r\n        const { selectedRowKeys } = Store.DataSource;\r\n        const deletelength = selectedRowKeys.length;\r\n        const disabled = deletelength < 1;\r\n        return (\r\n            <Row className=\"data-view-page-action\">\r\n                <Button onClick={Store.onRefreshMenu} icon=\"reload\" > <FormattedMessage id=\"action.sys.refreshMenu\" /></Button>\r\n                <Divider type=\"vertical\" />\r\n                <Visible visible={onAuthorizeActions(Store, \"insert\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.insert\" />}\r\n                        icon=\"plus\"\r\n                    >\r\n                        <InsertForm />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"update\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.update\" />}\r\n                        icon=\"edit\"\r\n                        disabled={deletelength != 1}\r\n                    >\r\n                        <UpdateForm loadData={() => (lodash.find(selectedRowKeys))} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button icon=\"delete\" onClick={ActionEvents.onDeleteList} disabled={disabled}><FormattedMessage id=\"action.delete\" /></Button>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"export\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Dropdown overlay={<Menu>\r\n                        <Menu.Item>\r\n                            <a onClick={ActionEvents.onExport}><FormattedMessage id=\"action.exportAll\" /></a>\r\n                        </Menu.Item>\r\n                        <Menu.Item disabled={disabled}>\r\n                            <a onClick={ActionEvents.onExportIds}><FormattedMessage id=\"action.exportSelect\" /></a>\r\n                        </Menu.Item>\r\n                    </Menu>}>\r\n                        <Button icon=\"download\" ><FormattedMessage id=\"action.export\" /></Button>\r\n                    </Dropdown>\r\n                </Visible>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n/**\r\n * 表格 行 动作\r\n */\r\n@DesError\r\n@observer\r\nclass RowAction extends React.Component<{\r\n    /** 数据详情 */\r\n    data: any;\r\n    [key: string]: any;\r\n}, any> {\r\n    render() {\r\n        const { data } = this.props\r\n        return (\r\n            <Row className=\"data-view-row-action\">\r\n                <Visible visible={onAuthorizeActions(Store, \"details\")}>\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.info\" />}\r\n                        showSubmit={false}\r\n                        type=\"a\"\r\n                    >\r\n                        <InfoForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"update\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <DialogForm\r\n                        title={<FormattedMessage id=\"action.update\" />}\r\n                        type=\"a\"\r\n                    >\r\n                        <UpdateForm loadData={data} />\r\n                    </DialogForm>\r\n                </Visible>\r\n                <Visible visible={onAuthorizeActions(Store, \"delete\")}>\r\n                    <Divider type=\"vertical\" />\r\n                    <Popconfirm title={<FormattedMessage id=\"action.deleteConfirm\" values={{ text: '' }} />} onConfirm={() => { ActionEvents.onDelete(data) }} >\r\n                        <a ><FormattedMessage id=\"action.delete\" /></a>\r\n                    </Popconfirm>\r\n                </Visible>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default {\r\n    /**\r\n     * 页面动作\r\n     */\r\n    pageAction: PageAction,\r\n    /**\r\n     * 数据行动作\r\n     */\r\n    rowAction: RowAction\r\n}\r\n","import { ImportModal } from 'components/dataView';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\n\r\n/**\r\n * 其他弹框类组件\r\n */\r\nexport default class extends React.Component<any, any>{\r\n    shouldComponentUpdate() {\r\n        return false\r\n    }\r\n    render() {\r\n        return <React.Fragment key=\"page-other\">\r\n            <ImportModal Store={Store} />\r\n        </React.Fragment>\r\n    }\r\n}","import { FormItem } from 'components/dataView';\r\nimport { DataViewSearch } from 'components/dataView/header/search';\r\nimport { DesForm } from 'components/decorators';\r\nimport { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport * as React from 'react';\r\nimport Store from '../store';\r\nimport Models from './models'; \r\n\r\n@DesForm\r\n@observer\r\nexport default class extends React.Component<any, any> {\r\n    // 创建模型\r\n    models = Models.searchModels(this.props);\r\n    render() {\r\n        // item 的 props\r\n        const props = {\r\n            ...this.props,\r\n            models: this.models,\r\n            defaultValues: toJS(Store.DataSource.searchParams)\r\n        }\r\n        return <DataViewSearch\r\n            // columnCount={4} 默认全局\r\n            // onReset={() => { }} 覆盖默认方法\r\n            // onSubmit={() => { }} 覆盖默认方法\r\n            Store={Store}\r\n            form={this.props.form}\r\n        >\r\n            {Models.renderModels(props)}\r\n        </DataViewSearch>\r\n    }\r\n}","import { ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { Icon } from 'antd';\r\nimport { AgGrid } from 'components/dataView';\r\nimport { mergeLocales } from 'locale';\r\nimport React from 'react';\r\nimport Store from '../store';\r\nimport Action from './action';\r\nmergeLocales({\r\n    \"zh-CN\": {\r\n        'frameworkmenu.DisplayOrder': '顺序',\r\n        'frameworkmenu.Icon': '图标',\r\n    },\r\n    \"en-US\": {\r\n        'frameworkmenu.DisplayOrder': 'DisplayOrder',\r\n        'frameworkmenu.Icon': 'Icon',\r\n    }\r\n});\r\n// 列配置\r\nconst columnDefs: (ColDef | ColGroupDef)[] = [\r\n    // {\r\n    //     headerName: \"页面名称\", field: \"PageName\"\r\n    // },\r\n    {\r\n        headerName: \"frameworkmenu.DisplayOrder\", field: \"DisplayOrder\",\r\n    },\r\n    {\r\n        headerName: \"frameworkmenu.Icon\", field: \"Icon\", cellRenderer: \"renderIcon\"\r\n    },\r\n]\r\n/**\r\n * 表格\r\n */\r\nexport default class extends React.Component<any, any> {\r\n    render() {\r\n        return <AgGrid\r\n            treeData\r\n            groupDefaultExpanded={-1}\r\n            getDataPath={data => data.treePath}\r\n            autoGroupColumnDef={{\r\n                headerName: \"页面名称\",\r\n                cellRendererParams: { suppressCount: true }\r\n            }}\r\n            // 页面状态 \r\n            Store={Store}\r\n            // 列配置\r\n            columnDefs={columnDefs}\r\n            // 行操作 \r\n            rowAction={Action.rowAction}\r\n            // 行操作 col props 同 columnDefs配置相同\r\n            // rowActionCol={{ headerName: \"操作\" }}\r\n            frameworkComponents={{\r\n                // 注册一个 图标渲染组件\r\n                renderIcon: ({ value, data }) => {\r\n                    if (data.Icon) {\r\n                        return <div  >\r\n                            <Icon type={data.Icon} style={{ fontSize: 20 }} />\r\n                        </div>\r\n                    }\r\n                    return null\r\n                }\r\n            }}\r\n        />\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { AuthorizeDecorator } from 'store/system/authorize';\r\nimport Store from './store';\r\nimport Action from './views/action';\r\nimport Other from './views/other';\r\nimport Search from './views/search';\r\nimport Table from './views/table';\r\n/**\r\n * 页面入口\r\n *  Action：页面动作\r\n *  Details：详情信息，添加，编辑，详情。\r\n *  Other：其他部件，导入导出\r\n *  Search：搜索参数\r\n *  Table：表格\r\n */\r\n@AuthorizeDecorator({ PageStore: Store })\r\nexport default class App extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n        <div className=\"app-page-frameworkmenu\" key=\"app-page-frameworkmenu\">\r\n        <Search {...this.props} />\r\n        <Action.pageAction {...this.props} />\r\n        <Table {...this.props} />\r\n        <Other {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsEndIndex = require('./_charsEndIndex'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n/** Used to match leading and trailing whitespace. */\n\n\nvar reTrim = /^\\s+|\\s+$/g;\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\n\nfunction trim(string, chars, guard) {\n  string = toString(string);\n\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n  return castSlice(strSymbols, start, end).join('');\n}\n\nmodule.exports = trim;","var baseIndexOf = require('./_baseIndexOf');\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\n\n\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\n  return index;\n}\n\nmodule.exports = charsEndIndex;"],"sourceRoot":""}