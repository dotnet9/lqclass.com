<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>账号</value>
  </data>
  <data name="ApiDoc" xml:space="preserve">
    <value>Api文档</value>
  </data>
  <data name="BackHome" xml:space="preserve">
    <value>返回首页</value>
  </data>
  <data name="BatchDelete" xml:space="preserve">
    <value>批量删除</value>
  </data>
  <data name="BatchDeleteConfirm" xml:space="preserve">
    <value>确定要删除以下数据么：</value>
  </data>
  <data name="BatchEdit" xml:space="preserve">
    <value>批量修改</value>
  </data>
  <data name="BatchEditConfirm" xml:space="preserve">
    <value>批量修改以下数据</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>修改密码</value>
  </data>
  <data name="ChangePasswordSuccess" xml:space="preserve">
    <value>密码修改成功，下次请使用新密码登录。</value>
  </data>
  <data name="CheckExport" xml:space="preserve">
    <value>勾选导出</value>
  </data>
  <data name="CloseAllTags" xml:space="preserve">
    <value>关闭全部标签页</value>
  </data>
  <data name="CloseOtherTags" xml:space="preserve">
    <value>关闭其它标签页</value>
  </data>
  <data name="CloseThisTag" xml:space="preserve">
    <value>关闭当前标签页</value>
  </data>
  <data name="CodeGen" xml:space="preserve">
    <value>代码生成器</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>新建</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteConfirm" xml:space="preserve">
    <value>确定要删除这条数据么：</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>详细</value>
  </data>
  <data name="DownloadTemplate" xml:space="preserve">
    <value>下载模板</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>修改</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="HideShow" xml:space="preserve">
    <value>侧边伸缩</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="Login.InputPassword" xml:space="preserve">
    <value>请输入密码</value>
  </data>
  <data name="Login.InputUserName" xml:space="preserve">
    <value>请输入用户名</value>
  </data>
  <data name="Login.InputValidation" xml:space="preserve">
    <value>请输入验证码</value>
  </data>
  <data name="Login.Login" xml:space="preserve">
    <value>登 录</value>
  </data>
  <data name="Login.Register" xml:space="preserve">
    <value>注 册</value>
  </data>
  <data name="Login.RememberMe" xml:space="preserve">
    <value>记住我</value>
  </data>
  <data name="Login.ValidationFail" xml:space="preserve">
    <value>验证码不正确</value>
  </data>
  <data name="LoginFail" xml:space="preserve">
    <value>登陆失败</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>新密码</value>
  </data>
  <data name="NewPasswordComfirm" xml:space="preserve">
    <value>新密码</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>当前密码</value>
  </data>
  <data name="OldPasswrodWrong" xml:space="preserve">
    <value>当前密码错误</value>
  </data>
  <data name="PasswordNotSame" xml:space="preserve">
    <value>两次新密码输入不一致</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="Reg.ItcodeDuplicate" xml:space="preserve">
    <value>账号重复</value>
  </data>
  <data name="Reg.Success" xml:space="preserve">
    <value>注册成功</value>
  </data>
  <data name="Reg.Title" xml:space="preserve">
    <value>新用户注册</value>
  </data>
  <data name="UploadTemplate" xml:space="preserve">
    <value>上传模板</value>
  </data>
  <data name="WtmDoc" xml:space="preserve">
    <value>WTM文档</value>
  </data>
  <data name="{0}formaterror" xml:space="preserve">
    <value>{0}格式错误</value>
  </data>
  <data name="{0}number" xml:space="preserve">
    <value>{0}必须是数字</value>
  </data>
  <data name="{0}range{1}" xml:space="preserve">
    <value>{0}至少是{1}</value>
  </data>
  <data name="{0}range{1}{2}" xml:space="preserve">
    <value>{0}必须是{1}到{2}之间的数</value>
  </data>
  <data name="{0}range{2}" xml:space="preserve">
    <value>{0}最多是{1}</value>
  </data>
  <data name="{0}required" xml:space="preserve">
    <value>{0}是必填项</value>
  </data>
  <data name="{0}stringmax{1}" xml:space="preserve">
    <value>{0}最多输入{1}个字符</value>
  </data>
  <data name="{0}ValueNotExist" xml:space="preserve">
    <value>{0}输入的值在数据库中不存在</value>
  </data>
  <data name="{0}ValueTypeNotAllowed" xml:space="preserve">
    <value>{0}输入的值不在允许的数据类型范围内</value>
  </data>
</root>
